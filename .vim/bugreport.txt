uname -a
Linux g7pc 5.4.13-1-ck-skylake #1 SMP PREEMPT Sat, 18 Jan 2020 13:08:55 +0000 x86_64 GNU/Linux


NVIM v0.4.3
Build type: Release
LuaJIT 2.0.5
Compilation: /usr/bin/cc -march=x86-64 -mtune=generic -O2 -pipe -fno-plt -O2 -DNDEBUG -DMIN_LOG_LEVEL=3 -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wshadow -Wconversion -Wmissing-prototypes -Wimplicit-fallthrough -Wvla -fstack-protector-strong -fdiagnostics-color=always -DINCLUDE_GENERATED_DECLARATIONS -D_GNU_SOURCE -DNVIM_MSGPACK_HAS_FLOAT32 -DNVIM_UNIBI_HAS_VAR_FROM -I/build/neovim/src/build/config -I/build/neovim/src/neovim-0.4.3/src -I/usr/include -I/build/neovim/src/build/src/nvim/auto -I/build/neovim/src/build/include
Compiled by builduser

Features: +acl +iconv +tui
See ":help feature-compile"

   system vimrc file: "$VIM/sysinit.vim"
  fall-back for $VIM: "/usr/share/nvim"

Run :checkhealth for more info
--- Directories and Files ---
$VIM = "/usr/share/nvim"
directory "/usr/share/nvim" exists
$VIMRUNTIME = "/usr/share/nvim/runtime"
directory "/usr/share/nvim/runtime" exists
"/usr/share/nvim/runtime/doc/help.txt" is readable
"/usr/share/nvim/runtime/doc/tags" is readable
"/usr/share/nvim/runtime/menu.vim" is readable
"/usr/share/nvim/runtime/filetype.vim" is readable
"/usr/share/nvim/runtime/syntax/synload.vim" is readable
--- Scripts sourced ---
  1: /etc/xdg/nvim/sysinit.vim
  2: /usr/share/nvim/archlinux.vim
  3: ~/.config/nvim/init.vim
  4: ~/.config/vim/.vim/vimrc
  5: ~/.config/vim/.vim/autoload/plug.vim
  6: /usr/share/nvim/runtime/filetype.vim
  7: ~/.config/vim/.vim/plugged/vim-fugitive/ftdetect/fugitive.vim
  8: /usr/share/nvim/runtime/ftplugin.vim
  9: /usr/share/nvim/runtime/indent.vim
 10: /usr/share/nvim/runtime/syntax/syntax.vim
 11: /usr/share/nvim/runtime/syntax/synload.vim
 12: /usr/share/nvim/runtime/syntax/syncolor.vim
 13: /usr/share/nvim/runtime/ftoff.vim
 14: /usr/share/nvim/runtime/bugreport.vim
--- Options ---
  aleph=224           charconvert=        dictionary=         foldlevel=0         incsearch           maxcombine=6        printencoding=    nosecure            nospell               thesaurus=          wildmenu
noarabic            nocindent           nodiff                foldlevelstart=-1   indentexpr=         maxfuncdepth=100    printfont=courier   selectmode=         spellfile=        notildeop             wildmode=full
  arabicshape         cinoptions=         diffexpr=           foldmethod=manual noinfercase           maxmapdepth=1000    printmbcharset=     shadafile=          spelllang=en        timeout             winaltkeys=menu
noallowrevins         clipboard=        nodigraph             foldminlines=1    noinsertmode          menuitems=25        printmbfont=        shell=/bin/zsh      spellsuggest=best   timeoutlen=1000     winblend=0
  ambiwidth=single    cmdheight=1         eadirection=both    foldnestmax=20      isprint=@,161-255   modeline            printoptions=       shellcmdflag=-c   nosplitbelow        notitle               winhighlight=
noautochdir           cmdwinheight=7    noedcompatible        formatexpr=         joinspaces        nomodelineexpr        prompt              shellpipe=| tee   nosplitright          titlelen=85         window=54
  autoindent          colorcolumn=        emoji               formatprg=          keymap=             modelines=5         pumheight=0         shellquote=         startofline         titleold=           winheight=1
  autoread            columns=236         encoding=utf-8    nofsync               keymodel=           modifiable          pumblend=0          shellredir=>        statusline=         titlestring=      nowinfixheight
noautowrite         nocompatible          endofline         nogdefault            keywordprg=:Man   nomodified            pyxversion=0        shelltemp           suffixesadd=        ttimeout          nowinfixwidth
noautowriteall        concealcursor=      equalalways         guifont=            langmap=          nomore                quoteescape=\       shellxquote=        swapfile            ttimeoutlen=50      winminheight=1
  background=dark     conceallevel=0      equalprg=           guifontset=         langmenu=           mouse=            noreadonly            shellxescape=       switchbuf=          ttyfast             winminwidth=1
nobackup              completefunc=     noerrorbells          guifontwide=        langnoremap         mousemodel=extend   redrawdebug=      noshiftround          synmaxcol=3000    noundofile            winwidth=20
  backupcopy=auto   noconfirm             eventignore=        helpheight=20     nolangremap           mousetime=500       redrawtime=2000     shiftwidth=8        syntax=             undolevels=1000     wrap
  backupext=~       nocopyindent        noexpandtab           helplang=en         laststatus=2        nrformats=bin,hex   regexpengine=0      showbreak=          tabline=            undoreload=10000    wrapmargin=0
  backupskip=/tmp/*   cscopepathcomp=0  noexrc              nohidden            nolazyredraw        nonumber            norelativenumber      showcmd             tabpagemax=50       updatecount=200     wrapscan
  belloff=all         cscopeprg=cscope    fileencoding=       history=10000     nolinebreak           numberwidth=4       remap             noshowfulltag         tabstop=8           updatetime=4000     write
nobinary              cscopequickfix=     fileformat=unix   nohkmap               lines=55            omnifunc=           report=2          noshowmatch           tagbsearch          verbose=0         nowriteany
nobomb              nocscoperelative    nofileignorecase    nohkmapp              linespace=0         operatorfunc=     norevins              showmode            tagcase=followic    verbosefile=        writebackup
nobreakindent       nocscopetag           filetype=           hlsearch          nolisp              nopaste             norightleft           showtabline=1       taglength=0         virtualedit=        writedelay=0
  breakindentopt=     cscopetagorder=0    fillchars=        noicon              nolist                pastetoggle=        ruler               sidescroll=1        tagrelative       novisualbell
  bufhidden=          cscopeverbose       fixendofline        iconstring=         loadplugins         patchexpr=          rulerformat=        sidescrolloff=0     tags=./tags;,tags   warn
  buflisted         nocursorbind          foldclose=        noignorecase          magic               patchmode=          scroll=26           signcolumn=auto     tagstack            whichwrap=b,s
  buftype=          nocursorcolumn        foldcolumn=0        iminsert=0          makeef=           nopreserveindent      scrollback=-1     nosmartcase         notermbidi            wildchar=<Tab>
  cdpath=,,         nocursorline          foldenable          imsearch=-1         makeencoding=       previewheight=12  noscrollbind        nosmartindent       notermguicolors       wildcharm=0
  cedit=^F            debug=              foldexpr=0          inccommand=         makeprg=make      nopreviewwindow       scrolljump=1        smarttab          noterse               wildignore=
  channel=0         nodelcombine          foldignore=#        includeexpr=        matchtime=5         printdevice=        scrolloff=0         softtabstop=0       textwidth=0       nowildignorecase
  backspace=indent,eol,start
  backupdir=.,~/.local/share/nvim/backup
  breakat= ^I!@*-+;:,./?
  casemap=internal,keepascii
  cinkeys=0{,0},0),0],:,0#,!^F,o,O,e
  cinwords=if,else,while,do,for,switch
  comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
  commentstring=/*%s*/
  complete=.,w,b,u,t
  completeopt=menu,preview
  cpoptions=aABceFs_
  define=^\s*#\s*define
  diffopt=internal,filler
  directory=~/.local/share/nvim/swap//
  display=lastline,msgsep
  errorfile=errors.err
  errorformat=%*[^"]"%f"%*\D%l: %m,"%f"%*\D%l: %m,%-G%f:%l: (Each undeclared identifier is reported only once,%-G%f:%l: for each function it appears in.),%-GIn file included from %f:%l:%c:,%-GIn file included from %f:%l:%c\,,%-GIn file included from %f:%l:%c,%-GIn file included from %f:%l,%-G%*[ ]from %f:%l:%c,%-G%*[ ]from %f:%l:,%-G%*[ ]from %f:%l\,,%-G%*[ ]from %f:%l,%f:%l:%c:%m,%f(%l):%m,%f:%l:%m,"%f"\, line %l%*\D%c%*[^ ] %m,%D%*\a[%*\d]: Entering directory %*[`']%f',%X%*\a[%*\d]: Leaving directory %*[`']%f',%D%*\a: Entering directory %*[`']%f',%X%*\a: Leaving directory %*[`']%f',%DMaking %*\a in %f,%f|%l| %m
  fileencodings=ucs-bom,utf-8,default,latin1
  fileformats=unix,dos
  foldmarker={{{,}}}
  foldopen=block,hor,mark,percent,quickfix,search,tag,undo
  foldtext=foldtext()
  formatoptions=tcqj
  formatlistpat=^\s*\d\+[\]:.)}\t ]\s*
  grepformat=%f:%l:%m,%f:%l%m,%f  %l%m
  grepprg=grep -n $* /dev/null
  guicursor=n-v-c-sm:block,i-ci-ve:ver25,r-cr-o:hor20
  helpfile=/usr/share/nvim/runtime/doc/help.txt
  highlight=8:SpecialKey,~:EndOfBuffer,z:TermCursor,Z:TermCursorNC,@:NonText,d:Directory,e:ErrorMsg,i:IncSearch,l:Search,m:MoreMsg,M:ModeMsg,n:LineNr,N:CursorLineNr,r:Question,s:StatusLine,S:StatusLineNC,c:VertSplit,t:Title,v:Visual,V:VisualNOS,w:WarningMsg,W:WildMenu,f:Folded,F:FoldColumn,A:DiffAdd,C:DiffChange,D:DiffDelete,T:DiffText,>:SignColumn,-:Conceal,B:SpellBad,P:SpellCap,R:SpellRare,L:SpellLocal,+:Pmenu,=:PmenuSel,x:PmenuSbar,X:PmenuThumb,*:TabLine,#:TabLineSel,_:TabLineFill,!:CursorColumn,.:CursorLine,o:ColorColumn,q:QuickFixLine,0:Whitespace,I:NormalNC
  include=^\s*#\s*include
  indentkeys=0{,0},0),0],:,0#,!^F,o,O,e
  isfname=@,48-57,/,.,-,_,+,,,#,$,%,~,=
  isident=@,48-57,_,192-255
  iskeyword=@,48-57,_,192-255
  lispwords=defun,define,defmacro,set!,lambda,if,case,let,flet,let*,letrec,do,do*,define-syntax,let-syntax,letrec-syntax,destructuring-bind,defpackage,defparameter,defstruct,deftype,defvar,do-all-symbols,do-external-symbols,do-symbols,dolist,dotimes,ecase,etypecase,eval-when,labels,macrolet,multiple-value-bind,multiple-value-call,multiple-value-prog1,multiple-value-setq,prog1,progv,typecase,unless,unwind-protect,when,with-input-from-string,with-open-file,with-open-stream,with-output-to-string,with-package-iterator,define-condition,handler-bind,handler-case,restart-bind,restart-case,with-simple-restart,store-value,use-value,muffle-warning,abort,continue,with-slots,with-slots*,with-accessors,with-accessors*,defclass,defmethod,print-unreadable-object
  listchars=tab:> ,trail:-,nbsp:+
  matchpairs=(:),{:},[:]
  maxmempattern=1000
  mkspellmem=460000,2000,500
  packpath=~/.vim,0,0,0,0,0,0,0,0,0,0,~/.config/nvim,/etc/xdg/nvim,~/.local/share/nvim/site,/usr/local/share/nvim/site,/usr/share/nvim/site,/usr/share/nvim/runtime,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,~/.local/share/nvim/site/after,/etc/xdg/nvim/after,~/.config/nvim/after,/usr/share/vim/vimfiles,~/.vim/after
  paragraphs=IPLPPPQPP TPHPLIPpLpItpplpipbp
  path=.,/usr/include,,
  printexpr=system(['lpr'] + (empty(&printdevice)?[]:['-P', &printdevice]) + [v:fname_in]). delete(v:fname_in)+ v:shell_error
  printheader=%<%f%h%m%=Page %N
  rightleftcmd=search
  runtimepath=~/.vim,0,0,0,0,0,0,0,0,0,0,~/.config/nvim,/etc/xdg/nvim,~/.local/share/nvim/site,/usr/local/share/nvim/site,/usr/share/nvim/site,/usr/share/nvim/runtime,/usr/share/nvim/site/after,/usr/local/share/nvim/site/after,~/.local/share/nvim/site/after,/etc/xdg/nvim/after,~/.config/nvim/after,/usr/share/vim/vimfiles,~/.vim/after
  scrollopt=ver,jump
  sections=SHNHH HUnhsh
  selection=inclusive
  sessionoptions=blank,buffers,curdir,folds,help,tabpages,winsize
  shada=!,'100,<50,s10,h
  shortmess=filnxtToOF
  spellcapcheck=[.?!]\_[\])'"^I ]\+
  suffixes=.bak,~,.o,.h,.info,.swp,.obj
  undodir=~/.local/share/nvim/undo
  viewdir=~/.local/share/nvim/view
  viewoptions=folds,options,cursor,curdir
  wildoptions=pum,tagfile
--- Autocommands ---
filetypedetect  BufEnter
    *.xpm     if getline(1) =~ "XPM2" |   setf xpm2 | else |   setf xpm | endif
    *.xpm2    setf xpm2
filetypedetect  BufNewFile
    ?\+.orig  exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.bak   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.old   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.new   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-dist
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-old
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-new
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-bak
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmsave
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmnew
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.pacsave
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.pacnew
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    *~        let s:name = expand("<afile>") | let s:short = substitute(s:name, '\~$', '', '') | if s:name != s:short && s:short != "" |   exe "doau filetypedetect BufRead " . fnameescape(s:short) | endif | unlet! s:name s:short
    ?\+.in    if expand("<afile>:t") != "configure.in" |   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r")) | endif
    /usr/share/nvim/runtime/doc/*.txt
              setf help
    *.inp     call dist#ft#Check_inp()
    *.8th     setf 8th
    *.aap     setf aap
    */etc/a2ps.cfg
              setf a2ps
    */etc/a2ps/*.cfg
              setf a2ps
    a2psrc    setf a2ps
    .a2psrc   setf a2ps
    *.abap    setf abap
    *.abc     setf abc
    *.abl     setf abel
    *.wrm     setf acedb
    *.adb     setf ada
    *.ads     setf ada
    *.ada     setf ada
    *.gpr     setf ada
    *.tdf     setf ahdl
    *.run     setf ampl
    build.xml setf ant
    *.ino     setf arduino
    *.pde     setf arduino
    .htaccess setf apache
    */etc/httpd/*.conf
              setf apache
    */etc/apache2/sites-*/*.com
              setf apache
    *.a65     setf a65
    *.scpt    setf applescript
    *.am      if expand("<afile>") !~? 'Makefile.am\>' | setf elf | endif
    .asoundrc setf alsaconf
    */usr/share/alsa/alsa.conf
              setf alsaconf
    */etc/asound.conf
              setf alsaconf
    *.aml     setf aml
    apt.conf  setf aptconf
    */.aptitude/config
              setf aptconf
    */etc/apt/apt.conf.d/{[-_[:alnum:]]\+,[-_.[:alnum:]]\+.conf}
              setf aptconf
    .arch-inventory
              setf arch
    =tagging-method
              setf arch
    *.art     setf art
    *.asciidoc
              setf asciidoc
    *.adoc    setf asciidoc
    *.asn     setf asn
    *.asn1    setf asn
    *.asa     if exists("g:filetype_asa") |   exe "setf " . g:filetype_asa | else |   setf aspvbs | endif
    *.asp     if exists("g:filetype_asp") |   exe "setf " . g:filetype_asp | elseif getline(1) . getline(2) . getline(3) =~? "perlscript" |   setf aspperl | else |   setf aspvbs | endif
    */boot/grub/menu.lst
              setf grub
    */boot/grub/grub.conf
              setf grub
    */etc/grub.conf
              setf grub
    *.asm     call dist#ft#FTasm()
    *.[sS]    call dist#ft#FTasm()
    *.[aA]    call dist#ft#FTasm()
    *.mac     call dist#ft#FTasm()
    *.lst     call dist#ft#FTasm()
    *.mar     setf vmasm
    *.atl     setf atlas
    *.as      setf atlas
    *.au3     setf autoit
    *.ahk     setf autohotkey
    [mM]akefile.am
              setf automake
    GNUmakefile.am
              setf automake
    *.at      setf m4
    *.ave     setf ave
    *.awk     setf awk
    *.mch     setf b
    *.ref     setf b
    *.imp     setf b
    *.bas     call dist#ft#FTVB("basic")
    *.vb      setf vb
    *.vbs     setf vb
    *.dsm     setf vb
    *.ctl     setf vb
    *.iba     setf ibasic
    *.ibi     setf ibasic
    *.fb      setf freebasic
    *.bi      setf freebasic
    *.bat     setf dosbatch
    *.sys     setf dosbatch
    *.cmd     if getline(1) =~ '^/\*' | setf rexx | else | setf dosbatch | endif
    *.btm     call dist#ft#FTbtm()
    *.bc      setf bc
    *.bdf     setf bdf
    *.bib     setf bib
    *.bst     setf bst
    named*.conf
              setf named
    rndc*.conf
              setf named
    rndc*.key setf named
    named.root
              setf bindzone
    *.db      call dist#ft#BindzoneCheck('')
    *.bl      setf blank
    */etc/blkid.tab
              setf xml
    */etc/blkid.tab.old
              setf xml
    *.bzl     setf bzl
    WORKSPACE setf bzl
    BUILD.bazel
              setf bzl
    BUILD     setf bzl
    *.c       call dist#ft#FTlpc()
    *.lpc     setf lpc
    *.ulpc    setf lpc
    calendar  setf calendar
    *.cs      setf cs
    *.csdl    setf csdl
    *.cabal   setf cabal
    *.toc     setf cdrtoc
    */etc/cdrdao.conf
              setf cdrdaoconf
    */etc/defaults/cdrdao
              setf cdrdaoconf
    */etc/default/cdrdao
              setf cdrdaoconf
    .cdrdao   setf cdrdaoconf
    cfengine.conf
              setf cfengine
    *.chai    setf chaiscript
    *.cdl     setf cdl
    *.recipe  setf conaryrecipe
    *.crm     setf crm
    *.cyn     setf cynpp
    *.cc      if exists("cynlib_syntax_for_cc")|setf cynlib|else|setf cpp|endif
    *.cpp     if exists("cynlib_syntax_for_cpp")|setf cynlib|else|setf cpp|endif
    *.cxx     setf cpp
    *.c++     setf cpp
    *.hh      setf cpp
    *.hxx     setf cpp
    *.hpp     setf cpp
    *.ipp     setf cpp
    *.moc     setf cpp
    *.tcc     setf cpp
    *.inl     setf cpp
    *.C       setf cpp
    *.H       setf cpp
    *.h       call dist#ft#FTheader()
    *.chf     setf ch
    *.tlh     setf cpp
    *.css     setf css
    *.con     setf cterm
    changelog.Debian
              setf debchangelog
    changelog.dch
              setf debchangelog
    NEWS.Debian
              setf debchangelog
    NEWS.dch  setf debchangelog
    [cC]hange[lL]og
              if getline(1) =~ '; urgency='|   setf debchangelog| else|   setf changelog| endif
    NEWS      if getline(1) =~ '; urgency='|   setf debchangelog| endif
    *..ch     setf chill
    *.ch      call dist#ft#FTchange()
    *.chopro  setf chordpro
    *.crd     setf chordpro
    *.cho     setf chordpro
    *.crdpro  setf chordpro
    *.chordpro
              setf chordpro
    *.dcl     setf clean
    *.icl     setf clean
    *.eni     setf cl
    *.ent     call dist#ft#FTent()
    *.prg     if exists("g:filetype_prg") |   exe "setf " . g:filetype_prg | else |   setf clipper | endif
    *.clj     setf clojure
    *.cljs    setf clojure
    *.cljx    setf clojure
    *.cljc    setf clojure
    CMakeLists.txt
              setf cmake
    *.cmake   setf cmake
    *.cmake.in
              setf cmake
    */.cmus/{autosave,rc,command-history,*.theme}
              setf cmusrc
    */cmus/{rc,*.theme}
              setf cmusrc
    *.cbl     setf cobol
    *.cob     setf cobol
    *.lib     setf cobol
    *.cpy     if getline(1) =~ '^##' |   setf python | else |   setf cobol | endif
    *.atg     setf coco
    *.cfm     setf cf
    *.cfi     setf cf
    *.cfc     setf cf
    configure.in
              setf config
    configure.ac
              setf config
    *.cu      setf cuda
    *.cuh     setf cuda
    Dockerfile
              setf dockerfile
    *.Dockerfile
              setf dockerfile
    *.dcd     setf dcd
    *enlightenment/*.cfg
              setf c
    *Eterm/*.cfg
              setf eterm
    *.eu      call dist#ft#EuphoriaCheck()
    *.ew      call dist#ft#EuphoriaCheck()
    *.ex      call dist#ft#EuphoriaCheck()
    *.exu     call dist#ft#EuphoriaCheck()
    *.exw     call dist#ft#EuphoriaCheck()
    *.EU      call dist#ft#EuphoriaCheck()
    *.EW      call dist#ft#EuphoriaCheck()
    *.EX      call dist#ft#EuphoriaCheck()
    *.EXU     call dist#ft#EuphoriaCheck()
    *.EXW     call dist#ft#EuphoriaCheck()
    lynx.cfg  setf lynx
    *baseq[2-3]/*.cfg
              setf quake
    *id1/*.cfg
              setf quake
    *quake[1-3]/*.cfg
              setf quake
    *.qc      setf c
    *.cfg     setf cfg
    *.feature setf cucumber
    *.csp     setf csp
    *.fdr     setf csp
    *.pld     setf cupl
    *.si      setf cuplsim
    */debian/control
              setf debcontrol
    control   if getline(1) =~ '^Source:'|   setf debcontrol| endif
    */debian/copyright
              setf debcopyright
    copyright if getline(1) =~ '^Format:'|   setf debcopyright| endif
    */etc/apt/sources.list
              setf debsources
    */etc/apt/sources.list.d/*.list
              setf debsources
    denyhosts.conf
              setf denyhosts
    */etc/dnsmasq.conf
              setf dnsmasq
    *.desc    setf desc
    *.d       call dist#ft#DtraceCheck()
    *.desktop setf desktop
    .directory
              setf desktop
    dict.conf setf dictconf
    .dictrc   setf dictconf
    dictd.conf
              setf dictdconf
    *.diff    setf diff
    *.rej     setf diff
    *.patch   if getline(1) =~ '^From [0-9a-f]\{40\} Mon Sep 17 00:00:00 2001$' |   setf gitsendemail | else |   setf diff | endif
    .dir_colors
              setf dircolors
    .dircolors
              setf dircolors
    */etc/DIR_COLORS
              setf dircolors
    *.rul     if getline(1).getline(2).getline(3).getline(4).getline(5).getline(6) =~? 'InstallShield' |   setf ishd | else |   setf diva | endif
    *.com     call dist#ft#BindzoneCheck('dcl')
    *.dot     setf dot
    *.lid     setf dylanlid
    *.intr    setf dylanintr
    *.dylan   setf dylan
    *.def     setf def
    *.drac    setf dracula
    *.drc     setf dracula
    *lvs      setf dracula
    *lpe      setf dracula
    *.ds      setf datascript
    *.dsl     setf dsl
    *.dtd     setf dtd
    *.dts     setf dts
    *.dtsi    setf dts
    *.ed\(f\|if\|o\)
              setf edif
    *.edn     if getline(1) =~ '^\s*(\s*edif\>' |   setf edif | else |   setf clojure | endif
    .editorconfig
              setf dosini
    *.ecd     setf ecd
    *.e       call dist#ft#FTe()
    *.E       call dist#ft#FTe()
    */etc/elinks.conf
              setf elinks
    */.elinks/elinks.conf
              setf elinks
    *.erl     setf erlang
    *.hrl     setf erlang
    *.yaws    setf erlang
    filter-rules
              setf elmfilt
    *esmtprc  setf esmtprc
    *.ec      setf esqlc
    *.EC      setf esqlc
    *.strl    setf esterel
    *.csc     setf csc
    exim.conf setf exim
    *.exp     setf expect
    exports   setf exports
    *.fal     setf falcon
    *.fan     setf fan
    *.fwt     setf fan
    *.factor  setf factor
    .fetchmailrc
              setf fetchmail
    *.fex     setf focexec
    *.focexec setf focexec
    auto.master
              setf conf
    *.mas     setf master
    *.master  setf master
    *.fs      setf forth
    *.ft      setf forth
    *.fth     setf forth
    *.frt     setf reva
    *.F       setf fortran
    *.FOR     setf fortran
    *.FPP     setf fortran
    *.FTN     setf fortran
    *.F77     setf fortran
    *.F90     setf fortran
    *.F95     setf fortran
    *.F03     setf fortran
    *.F08     setf fortran
    *.f       setf fortran
    *.for     setf fortran
    *.fortran setf fortran
    *.fpp     setf fortran
    *.ftn     setf fortran
    *.f77     setf fortran
    *.f90     setf fortran
    *.f95     setf fortran
    *.f03     setf fortran
    *.f08     setf fortran
    *.fsl     setf framescript
    fstab     setf fstab
    mtab      setf fstab
    .gdbinit  setf gdb
    *.mo      setf gdmo
    *.gdmo    setf gdmo
    *.ged     setf gedcom
    lltxxxxx.txt
              setf gedcom
    COMMIT_EDITMSG
              setf gitcommit
    MERGE_MSG setf gitcommit
    TAG_EDITMSG
              setf gitcommit
    *.git/config
              setf gitconfig
    .gitconfig
              setf gitconfig
    /etc/gitconfig
              setf gitconfig
    */.config/git/config
              setf gitconfig
    .gitmodules
              setf gitconfig
    *.git/modules/*/config
              setf gitconfig
    /home/violeine/.config/git/config
              setf gitconfig
    git-rebase-todo
              setf gitrebase
    .gitsendemail.msg.??????
              setf gitsendemail
    .msg.[0-9]*
              if getline(1) =~ '^From.*# This line is ignored.$' |   setf gitsendemail | endif
    *.git/*   if getline(1) =~ '^\x\{40\}\>\|^ref: ' |   setf git | endif
    gkrellmrc setf gkrellmrc
    gkrellmrc_?
              setf gkrellmrc
    *.gp      setf gp
    .gprc     setf gp
    */.gnupg/options
              setf gpg
    */.gnupg/gpg.conf
              setf gpg
    */usr/*/gnupg/options.skel
              setf gpg
    gnashrc   setf gnash
    .gnashrc  setf gnash
    gnashpluginrc
              setf gnash
    .gnashpluginrc
              setf gnash
    gitolite.conf
              setf gitolite
    {,.}gitolite.rc
              setf perl
    example.gitolite.rc
              setf perl
    *.gpi     setf gnuplot
    *.go      setf go
    *.gs      setf grads
    *.gretl   setf gretl
    *.gradle  setf groovy
    *.groovy  setf groovy
    *.gsp     setf gsp
    */etc/group
              setf group
    */etc/group-
              setf group
    */etc/group.edit
              setf group
    */etc/gshadow
              setf group
    */etc/gshadow-
              setf group
    */etc/gshadow.edit
              setf group
    */var/backups/group.bak
              setf group
    */var/backups/gshadow.bak
              setf group
    .gtkrc    setf gtkrc
    gtkrc     setf gtkrc
    *.haml    setf haml
    *.hsc     setf hamster
    *.hsm     setf hamster
    *.hs      setf haskell
    *.hs-boot setf haskell
    *.lhs     setf lhaskell
    *.chs     setf chaskell
    *.ht      setf haste
    *.htpp    setf hastepreproc
    *.vc      setf hercules
    *.ev      setf hercules
    *.sum     setf hercules
    *.errsum  setf hercules
    *.hex     setf hex
    *.h32     setf hex
    *.hws     setf hollywood
    *.t.html  setf tilde
    *.html    call dist#ft#FThtml()
    *.htm     call dist#ft#FThtml()
    *.shtml   call dist#ft#FThtml()
    *.stm     call dist#ft#FThtml()
    *.erb     setf eruby
    *.rhtml   setf eruby
    *.html.m4 setf htmlm4
    *.tmpl    setf template
    */etc/host.conf
              setf hostconf
    */etc/hosts.allow
              setf hostsaccess
    */etc/hosts.deny
              setf hostsaccess
    *.hb      setf hb
    *.htt     setf httest
    *.htb     setf httest
    *.icn     setf icon
    *.idl     call dist#ft#FTidl()
    *.odl     setf msidl
    *.mof     setf msidl
    */.icewm/menu
              setf icemenu
    .indent.pro
              setf indent
    indent.pro
              call dist#ft#ProtoCheck('indent')
    *.pro     call dist#ft#ProtoCheck('idlang')
    indentrc  setf indent
    *.inf     setf inform
    *.INF     setf inform
    */etc/initng/*/*.i
              setf initng
    *.ii      setf initng
    upstream.dat\c
              setf upstreamdat
    upstream.*.dat\c
              setf upstreamdat
    *.upstream.dat\c
              setf upstreamdat
    fdrupstream.log
              setf upstreamlog
    upstream.log\c
              setf upstreamlog
    upstream.*.log\c
              setf upstreamlog
    *.upstream.log\c
              setf upstreamlog
    UPSTREAM-*.log\c
              setf upstreamlog
    upstreaminstall.log\c
              setf upstreaminstalllog
    upstreaminstall.*.log\c
              setf upstreaminstalllog
    *.upstreaminstall.log\c
              setf upstreaminstalllog
    usserver.log\c
              setf usserverlog
    usserver.*.log\c
              setf usserverlog
    *.usserver.log\c
              setf usserverlog
    usw2kagt.log\c
              setf usw2kagtlog
    usw2kagt.*.log\c
              setf usw2kagtlog
    *.usw2kagt.log\c
              setf usw2kagtlog
    ipf.conf  setf ipfilter
    ipf6.conf setf ipfilter
    ipf.rules setf ipfilter
    *.4gl     setf fgl
    *.4gh     setf fgl
    *.m4gl    setf fgl
    *.ini     setf dosini
    inittab   setf inittab
    *.iss     setf iss
    *.ijs     setf j
    *.jal     setf jal
    *.JAL     setf jal
    *.jpl     setf jam
    *.jpr     setf jam
    *.java    setf java
    *.jav     setf java
    *.jj      setf javacc
    *.jjt     setf javacc
    *.js      setf javascript
    *.javascript
              setf javascript
    *.es      setf javascript
    *.mjs     setf javascript
    *.jsx     setf javascriptreact
    *.jsp     setf jsp
    *.properties
              setf jproperties
    *.properties_??
              setf jproperties
    *.properties_??_??
              setf jproperties
    *.clp     setf jess
    *.jgr     setf jgraph
    *.jov     setf jovial
    *.j73     setf jovial
    *.jovial  setf jovial
    *.json    setf json
    *.jsonp   setf json
    *.webmanifest
              setf json
    *.kix     setf kix
    *.k       setf kwt
    *.kv      setf kivy
    *.ks      setf kscript
    Kconfig   setf kconfig
    Kconfig.debug
              setf kconfig
    *.ace     setf lace
    *.ACE     setf lace
    *.latte   setf latte
    *.lte     setf latte
    */etc/limits
              setf limits
    */etc/*limits.conf
              setf limits
    */etc/*limits.d/*.conf
              setf limits
    *.sig     setf lprolog
    *.ldif    setf ldif
    *.ld      setf ld
    *.less    setf less
    *.lex     setf lex
    *.l       setf lex
    *.lxx     setf lex
    *.l++     setf lex
    */etc/libao.conf
              setf libao
    */.libao  setf libao
    */etc/sensors.conf
              setf sensors
    */etc/sensors3.conf
              setf sensors
    lftp.conf setf lftp
    .lftprc   setf lftp
    *lftp/rc  setf lftp
    *.ll      setf lifelines
    lilo.conf setf lilo
    *.lsp     setf lisp
    *.lisp    setf lisp
    *.el      setf lisp
    *.cl      setf lisp
    *.jl      setf lisp
    *.L       setf lisp
    .emacs    setf lisp
    .sawfishrc
              setf lisp
    sbclrc    setf lisp
    .sbclrc   setf lisp
    *.liquid  setf liquid
    *.lite    setf lite
    *.lt      setf lite
    */LiteStep/*/*.rc
              setf litestep
    */etc/login.access
              setf loginaccess
    */etc/login.defs
              setf logindefs
    *.lgt     setf logtalk
    *.lot     setf lotos
    *.lotos   setf lotos
    *.lou     setf lout
    *.lout    setf lout
    *.lua     setf lua
    *.rockspec
              setf lua
    *.lsl     setf lsl
    *.lss     setf lss
    *.m4      if expand("<afile>") !~? 'html.m4$\|fvwm2rc' | setf m4 | endif
    *.mgp     setf mgp
    snd.\d\+  setf mail
    .letter   setf mail
    .letter.\d\+
              setf mail
    .followup setf mail
    .article  setf mail
    .article.\d\+
              setf mail
    pico.\d\+ setf mail
    mutt{ng,}-*-\w\+
              setf mail
    mutt[[:alnum:]_-]\\\{6\}
              setf mail
    neomutt-*-\w\+
              setf mail
    neomutt[[:alnum:]_-]\\\{6\}
              setf mail
    ae\d\+.txt
              setf mail
    /tmp/SLRN[0-9A-Z.]\+
              setf mail
    *.eml     setf mail
    */etc/mail/aliases
              setf mailaliases
    */etc/aliases
              setf mailaliases
    .mailcap  setf mailcap
    mailcap   setf mailcap
    *[mM]akefile
              setf make
    *.mk      setf make
    *.mak     setf make
    *.dsp     setf make
    *.ist     setf ist
    *.mst     setf ist
    *.page    setf mallard
    *.man     setf nroff
    */etc/man.conf
              setf manconf
    man.config
              setf manconf
    *.mv      setf maple
    *.mpl     setf maple
    *.mws     setf maple
    *.map     setf map
    *.markdown
              setf markdown
    *.mdown   setf markdown
    *.mkd     setf markdown
    *.mkdn    setf markdown
    *.mdwn    setf markdown
    *.md      setf markdown
    *.mason   setf mason
    *.mhtml   setf mason
    *.comp    setf mason
    *.m       call dist#ft#FTm()
    *.nb      setf mma
    *.mel     setf mel
    hg-editor-*.txt
              setf hgcommit
    *.hgrc    setf cfg
    *hgrc     setf cfg
    */log/{auth,cron,daemon,debug,kern,lpr,mail,messages,news/news,syslog,user}{,.log,.err,.info,.warn,.crit,.notice}{,.[0-9]*,-[0-9]*}
              setf messages
    *.mf      setf mf
    *.mp      setf mp
    *.mgl     setf mgl
    *.mix     setf mix
    *.mixal   setf mix
    *.mms     call dist#ft#FTmms()
    *.mmp     setf mmp
    *.mod     if getline(1) =~ '\<module\>' |   setf lprolog | else |   setf modsim3 | endif
    *.m2      setf modula2
    *.DEF     setf modula2
    *.MOD     setf modula2
    *.mi      setf modula2
    *.[mi][3g]
              setf modula3
    *.isc     setf monk
    *.monk    setf monk
    *.ssc     setf monk
    *.tsc     setf monk
    *.moo     setf moo
    */etc/modules.conf
              setf modconf
    */etc/modules
              setf modconf
    */etc/conf.modules
              setf modconf
    mplayer.conf
              setf mplayerconf
    */.mplayer/config
              setf mplayerconf
    *.s19     setf srec
    *.s28     setf srec
    *.s37     setf srec
    *.mot     setf srec
    *.srec    setf srec
    mrxvtrc   setf mrxvtrc
    .mrxvtrc  setf mrxvtrc
    *.msql    setf msql
    *.mysql   setf mysql
    */etc/Muttrc.d/*
              call s:StarSetf('muttrc')
    *.rc      setf rc
    *.rch     setf rc
    *.mu      setf mupad
    *.mush    setf mush
    Mutt{ng,}rc
              setf muttrc
    *.n1ql    setf n1ql
    *.nql     setf n1ql
    */etc/nanorc
              setf nanorc
    *.nanorc  setf nanorc
    *.NS[ACGLMNPS]
              setf natural
    Neomuttrc setf neomuttrc
    .netrc    setf netrc
    *.ninja   setf ninja
    *.ncf     setf ncf
    *.me      if expand("<afile>") != "read.me" && expand("<afile>") != "click.me" |   setf nroff | endif
    *.tr      setf nroff
    *.nr      setf nroff
    *.roff    setf nroff
    *.tmac    setf nroff
    *.mom     setf nroff
    *.[1-9]   call dist#ft#FTnroff()
    *.mm      call dist#ft#FTmm()
    *.nqc     setf nqc
    *.nse     setf lua
    *.nsi     setf nsis
    *.nsh     setf nsis
    *.ml      setf ocaml
    *.mli     setf ocaml
    *.mll     setf ocaml
    *.mly     setf ocaml
    .ocamlinit
              setf ocaml
    *.occ     setf occam
    *.xom     setf omnimark
    *.xin     setf omnimark
    *.or      setf openroad
    *.[Oo][Pp][Ll]
              setf opl
    *.ora     setf ora
    pf.conf   setf pf
    */etc/pam.conf
              setf pamconf
    *.papp    setf papp
    *.pxml    setf papp
    *.pxsl    setf papp
    */etc/passwd
              setf passwd
    */etc/passwd-
              setf passwd
    */etc/passwd.edit
              setf passwd
    */etc/shadow
              setf passwd
    */etc/shadow-
              setf passwd
    */etc/shadow.edit
              setf passwd
    */var/backups/passwd.bak
              setf passwd
    */var/backups/shadow.bak
              setf passwd
    *.pas     setf pascal
    *.dpr     setf pascal
    *.pdf     setf pdf
    *.pcmk    setf pcmk
    *.pl      call dist#ft#FTpl()
    *.PL      call dist#ft#FTpl()
    *.plx     setf perl
    *.al      setf perl
    *.psgi    setf perl
    *.p6      setf perl6
    *.pm6     setf perl6
    *.pl6     setf perl6
    *.pm      if getline(1) =~ "XPM2" |   setf xpm2 | elseif getline(1) =~ "XPM" |   setf xpm | else |   setf perl | endif
    *.pod     setf pod
    *.pod6    setf pod6
    *.php     setf php
    *.php\d   setf php
    *.phtml   setf php
    *.ctp     setf php
    *.pike    setf pike
    *.pmod    setf pike
    *.cmod    setf cmod
    */etc/pinforc
              setf pinfo
    */.pinforc
              setf pinfo
    *.rcp     setf pilrc
    .pinerc   setf pine
    pinerc    setf pine
    .pinercex setf pine
    pinercex  setf pine
    Pipfile   setf config
    Pipfile.lock
              setf json
    *.pli     setf pli
    *.pl1     setf pli
    *.plm     setf plm
    *.p36     setf plm
    *.pac     setf plm
    *.pls     setf plsql
    *.plsql   setf plsql
    *.plp     setf plp
    *.po      setf po
    *.pot     setf po
    main.cf   setf pfmain
    *.ps      setf postscr
    *.pfa     setf postscr
    *.afm     setf postscr
    *.eps     setf postscr
    *.epsf    setf postscr
    *.epsi    setf postscr
    *.ai      setf postscr
    *.ppd     setf ppd
    *.pov     setf pov
    .povrayrc setf povini
    *.inc     call dist#ft#FTinc()
    *printcap let b:ptcap_type = "print" | setf ptcap
    *termcap  let b:ptcap_type = "term" | setf ptcap
    *.g       setf pccts
    *.it      setf ppwiz
    *.ih      setf ppwiz
    *.obj     setf obj
    *.pc      setf proc
    *.action  setf privoxy
    .procmail setf procmail
    .procmailrc
              setf procmail
    *.w       call dist#ft#FTprogress_cweb()
    *.i       call dist#ft#FTprogress_asm()
    *.p       call dist#ft#FTprogress_pascal()
    *.psf     setf psf
    INDEX     if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    INFO      if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    *.pdb     setf prolog
    *.pml     setf promela
    *.proto   setf proto
    */etc/protocols
              setf protocols
    *.pyx     setf pyrex
    *.pxd     setf pyrex
    *.py      setf python
    *.pyw     setf python
    .pythonstartup
              setf python
    .pythonrc setf python
    *.ptl     setf python
    *.pyi     setf python
    *.rad     setf radiance
    *.mat     setf radiance
    .ratpoisonrc
              setf ratpoison
    ratpoisonrc
              setf ratpoison
    *\,v      setf rcs
    .inputrc  setf readline
    inputrc   setf readline
    *.reg     if getline(1) =~? '^REGEDIT[0-9]*\s*$\|^Windows Registry Editor Version \d*\.\d*\s*$' | setf registry | endif
    *.rib     setf rib
    *.rex     setf rexx
    *.orx     setf rexx
    *.rxo     setf rexx
    *.rxj     setf rexx
    *.jrexx   setf rexx
    *.rexxj   setf rexx
    *.rexx    setf rexx
    *.testGroup
              setf rexx
    *.testUnit
              setf rexx
    *.s       setf r
    *.S       setf r
    *.rd      setf rhelp
    *.Rd      setf rhelp
    *.Rnw     setf rnoweb
    *.rnw     setf rnoweb
    *.Snw     setf rnoweb
    *.snw     setf rnoweb
    *.Rmd     setf rmd
    *.rmd     setf rmd
    *.Smd     setf rmd
    *.smd     setf rmd
    *.Rrst    setf rrst
    *.rrst    setf rrst
    *.Srst    setf rrst
    *.srst    setf rrst
    *.r       call dist#ft#FTr()
    *.R       call dist#ft#FTr()
    .reminders
              setf remind
    *.remind  setf remind
    *.rem     setf remind
    resolv.conf
              setf resolv
    *.rnc     setf rnc
    *.rng     setf rng
    *.rpl     setf rpl
    robots.txt
              setf robots
    *.x       setf rpcgen
    *.rst     setf rst
    *.rtf     setf rtf
    .irbrc    setf ruby
    irbrc     setf ruby
    *.rb      setf ruby
    *.rbw     setf ruby
    *.gemspec setf ruby
    *.rs      setf rust
    *.ru      setf ruby
    Gemfile   setf ruby
    *.builder setf ruby
    *.rxml    setf ruby
    *.rjs     setf ruby
    [rR]antfile
              setf ruby
    *.rant    setf ruby
    [rR]akefile
              setf ruby
    *.rake    setf ruby
    *.sl      setf slang
    smb.conf  setf samba
    *.sas     setf sas
    *.sass    setf sass
    *.sa      setf sather
    *.scala   setf scala
    *.sbt     setf sbt
    *.sci     setf scilab
    *.sce     setf scilab
    *.scss    setf scss
    *.sd      setf sd
    *.sdl     setf sdl
    *.pr      setf sdl
    *.sed     setf sed
    *.siv     setf sieve
    *.sieve   setf sieve
    sendmail.cf
              setf sm
    *.mc      call dist#ft#McSetf()
    */etc/services
              setf services
    */etc/slp.conf
              setf slpconf
    */etc/slp.reg
              setf slpreg
    */etc/slp.spi
              setf slpspi
    */etc/serial.conf
              setf setserial
    *.sgm     if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type = "sgml" |   let b:docbk_ver = 4 |   setf docbk | else |   setf sgml | endif
    *.sgml    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type = "sgml" |   let b:docbk_ver = 4 |   setf docbk | else |   setf sgml | endif
    *.decl    if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dcl     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dec     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    catalog   setf catalog
    .bashrc   call dist#ft#SetFileTypeSH("bash")
    bashrc    call dist#ft#SetFileTypeSH("bash")
    bash.bashrc
              call dist#ft#SetFileTypeSH("bash")
    .bash[_-]profile
              call dist#ft#SetFileTypeSH("bash")
    .bash[_-]logout
              call dist#ft#SetFileTypeSH("bash")
    .bash[_-]aliases
              call dist#ft#SetFileTypeSH("bash")
    bash-fc[-.]
              call dist#ft#SetFileTypeSH("bash")
    *.bash    call dist#ft#SetFileTypeSH("bash")
    */{,.}bash[_-]completion{,.d,.sh}{,/*}
              call dist#ft#SetFileTypeSH("bash")
    *.ebuild  call dist#ft#SetFileTypeSH("bash")
    *.eclass  call dist#ft#SetFileTypeSH("bash")
    PKGBUILD  call dist#ft#SetFileTypeSH("bash")
    .kshrc    call dist#ft#SetFileTypeSH("ksh")
    *.ksh     call dist#ft#SetFileTypeSH("ksh")
    */etc/profile
              call dist#ft#SetFileTypeSH(getline(1))
    .profile  call dist#ft#SetFileTypeSH(getline(1))
    *.sh      call dist#ft#SetFileTypeSH(getline(1))
    *.env     call dist#ft#SetFileTypeSH(getline(1))
    *.install if getline(1) =~ '<?php' |   setf php | else |   call dist#ft#SetFileTypeSH("bash") | endif
    .tcshrc   call dist#ft#SetFileTypeShell("tcsh")
    *.tcsh    call dist#ft#SetFileTypeShell("tcsh")
    tcsh.tcshrc
              call dist#ft#SetFileTypeShell("tcsh")
    tcsh.login
              call dist#ft#SetFileTypeShell("tcsh")
    .login    call dist#ft#CSH()
    .cshrc    call dist#ft#CSH()
    csh.cshrc call dist#ft#CSH()
    csh.login call dist#ft#CSH()
    csh.logout
              call dist#ft#CSH()
    *.csh     call dist#ft#CSH()
    .alias    call dist#ft#CSH()
    .zprofile setf zsh
    */etc/zprofile
              setf zsh
    .zfbfmarks
              setf zsh
    .zshrc    setf zsh
    .zshenv   setf zsh
    .zlogin   setf zsh
    .zlogout  setf zsh
    .zcompdump
              setf zsh
    *.zsh     setf zsh
    *.scm     setf scheme
    *.ss      setf scheme
    *.rkt     setf scheme
    .screenrc setf screen
    screenrc  setf screen
    *.sim     setf simula
    *.sin     setf sinda
    *.s85     setf sinda
    *.sst     setf sisu
    *.ssm     setf sisu
    *.ssi     setf sisu
    *.-sst    setf sisu
    *._sst    setf sisu
    *.sst.meta
              setf sisu
    *.-sst.meta
              setf sisu
    *._sst.meta
              setf sisu
    *.il      setf skill
    *.ils     setf skill
    *.cdf     setf skill
    .slrnrc   setf slrnrc
    *.score   setf slrnsc
    *.st      setf st
    *.cls     if getline(1) =~ '^%' |  setf tex | elseif getline(1)[0] == '#' && getline(1) =~ 'rexx' |  setf rexx | else |  setf st | endif
    *.tpl     setf smarty
    *.smil    if getline(1) =~ '<?\s*xml.*?>' |   setf xml | else |   setf smil | endif
    *.smi     if getline(1) =~ '\<smil\>' |   setf smil | else |   setf mib | endif
    *.smt     setf smith
    *.smith   setf smith
    *.sno     setf snobol4
    *.spt     setf snobol4
    *.mib     setf mib
    *.my      setf mib
    *.hog     setf hog
    snort.conf
              setf hog
    vision.conf
              setf hog
    *.rules   call dist#ft#FTRules()
    *.spec    setf spec
    *.speedup setf spup
    *.spdata  setf spup
    *.spd     setf spup
    *.ice     setf slice
    *.sp      setf spice
    *.spice   setf spice
    *.spy     setf spyce
    *.spi     setf spyce
    squid.conf
              setf squid
    *.tyb     setf sql
    *.typ     setf sql
    *.tyc     setf sql
    *.pkb     setf sql
    *.pks     setf sql
    *.sql     call dist#ft#SQL()
    *.sqlj    setf sqlj
    *.sqr     setf sqr
    *.sqi     setf sqr
    ssh_config
              setf sshconfig
    */.ssh/config
              setf sshconfig
    sshd_config
              setf sshdconfig
    *.ado     setf stata
    *.do      setf stata
    *.imata   setf stata
    *.mata    setf stata
    *.class   if getline(1) !~ "^\xca\xfe\xba\xbe" | setf stata | endif
    *.hlp     setf smcl
    *.ihlp    setf smcl
    *.smcl    setf smcl
    *.stp     setf stp
    *.sml     setf sml
    *.cm      setf voscm
    */etc/sysctl.conf
              setf sysctl
    */etc/sysctl.d/*.conf
              setf sysctl
    */systemd/*.{automount,mount,path,service,socket,swap,target,timer}
              setf systemd
    /etc/systemd/system/*.d/*.conf
              setf systemd
    /etc/systemd/system/*.d/.#*
              setf systemd
    *.sdc     setf sdc
    */etc/sudoers
              setf sudoers
    sudoers.tmp
              setf sudoers
    *.svg     setf svg
    *.t       if !dist#ft#FTnroff() && !dist#ft#FTperl() | setf tads | endif
    tags      setf tags
    *.tak     setf tak
    {pending,completed,undo}.data
              setf taskdata
    *.task    setf taskedit
    *.tcl     setf tcl
    *.tk      setf tcl
    *.itcl    setf tcl
    *.itk     setf tcl
    *.jacl    setf tcl
    *.tli     setf tli
    *.slt     setf tsalt
    *.ttl     setf teraterm
    *.ti      setf terminfo
    *.latex   setf tex
    *.sty     setf tex
    *.dtx     setf tex
    *.ltx     setf tex
    *.bbl     setf tex
    *.tex     call dist#ft#FTtex()
    *.mkii    setf context
    *.mkiv    setf context
    *.mkvi    setf context
    *.texinfo setf texinfo
    *.texi    setf texinfo
    *.txi     setf texinfo
    texmf.cnf setf texmf
    .tidyrc   setf tidy
    tidyrc    setf tidy
    *.tf      setf tf
    .tfrc     setf tf
    tfrc      setf tf
    {.,}tmux*.conf
              setf tmux
    *.tpp     setf tpp
    *.treetop setf treetop
    trustees.conf
              setf trustees
    *.tssgm   setf tssgm
    *.tssop   setf tssop
    *.tsscl   setf tsscl
    *.tutor   setf tutor
    *.twig    setf twig
    *.ts      setf typescript
    *.tsx     setf typescriptreact
    *.uit     setf uil
    *.uil     setf uil
    */etc/udev/udev.conf
              setf udevconf
    */etc/udev/permissions.d/*.permissions
              setf udevperm
    */etc/udev/cdsymlinks.conf
              setf sh
    *.uc      setf uc
    */etc/updatedb.conf
              setf updatedb
    */usr/share/upstart/*.conf
              setf upstart
    */usr/share/upstart/*.override
              setf upstart
    */etc/init/*.conf
              setf upstart
    */etc/init/*.override
              setf upstart
    */.init/*.conf
              setf upstart
    */.init/*.override
              setf upstart
    */.config/upstart/*.conf
              setf upstart
    */.config/upstart/*.override
              setf upstart
    *.vr      setf vera
    *.vri     setf vera
    *.vrh     setf vera
    *.v       setf verilog
    *.va      setf verilogams
    *.vams    setf verilogams
    *.sv      setf systemverilog
    *.svh     setf systemverilog
    *.hdl     setf vhdl
    *.vhd     setf vhdl
    *.vhdl    setf vhdl
    *.vbe     setf vhdl
    *.vst     setf vhdl
    *.vim     setf vim
    *.vba     setf vim
    .exrc     setf vim
    _exrc     setf vim
    .viminfo  setf viminfo
    _viminfo  setf viminfo
    *.hw      if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.module  if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.pkg     if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.frm     call dist#ft#FTVB("form")
    *.sba     setf vb
    vgrindefs setf vgrindefs
    *.wrl     setf vrml
    *.vroom   setf vroom
    *.vue     setf vue
    *.wast    setf wast
    *.wat     setf wast
    *.wm      setf webmacro
    .wgetrc   setf wget
    wgetrc    setf wget
    *.wml     setf wml
    *.wbt     setf winbatch
    *.wsml    setf wsml
    *.wpl     setf xml
    wvdial.conf
              setf wvdial
    .wvdialrc setf wvdial
    .cvsrc    setf cvsrc
    cvs\d\+   setf cvs
    *.web     if getline(1)[0].getline(2)[0].getline(3)[0].getline(4)[0].getline(5)[0] =~ "%" |   setf web | else |   setf winbatch | endif
    *.ws[fc]  setf wsh
    *.xhtml   setf xhtml
    *.xht     setf xhtml
    XF86Config
              if getline(1) =~ '\<XConfigurator\>' |   let b:xf86conf_xfree86_version = 3 | endif | setf xf86conf
    */xorg.conf.d/*.conf
              let b:xf86conf_xfree86_version = 4 | setf xf86conf
    xorg.conf let b:xf86conf_xfree86_version = 4 | setf xf86conf
    xorg.conf-4
              let b:xf86conf_xfree86_version = 4 | setf xf86conf
    */etc/xinetd.conf
              setf xinetd
    *.xs      setf xs
    .Xdefaults
              setf xdefaults
    .Xpdefaults
              setf xdefaults
    .Xresources
              setf xdefaults
    xdm-config
              setf xdefaults
    *.ad      setf xdefaults
    *.msc     setf xmath
    *.msf     setf xmath
    *.ms      if !dist#ft#FTnroff() | setf xmath | endif
    *.xml     call dist#ft#FTxml()
    *.xmi     setf xml
    *.csproj  setf xml
    *.csproj.user
              setf xml
    *.ui      setf xml
    *.tpm     setf xml
    */etc/xdg/menus/*.menu
              setf xml
    fglrxrc   setf xml
    *.wsdl    setf xml
    *.xlf     setf xml
    *.xliff   setf xml
    *.xul     setf xml
    *Xmodmap  setf xmodmap
    *.xq      setf xquery
    *.xql     setf xquery
    *.xqm     setf xquery
    *.xquery  setf xquery
    *.xqy     setf xquery
    *.xsd     setf xsd
    *.xsl     setf xslt
    *.xslt    setf xslt
    *.yy      setf yacc
    *.yxx     setf yacc
    *.y++     setf yacc
    *.y       call dist#ft#FTy()
    *.yaml    setf yaml
    *.yml     setf yaml
    *.raml    setf raml
    */etc/yum.conf
              setf dosini
    *.zu      setf zimbu
    *.zut     setf zimbutempl
    *.dtml    call dist#ft#FThtml()
    *.pt      call dist#ft#FThtml()
    *.cpt     call dist#ft#FThtml()
    *.zsql    call dist#ft#SQL()
    *.z8a     setf z8a
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif
    */etc/proftpd/*.conf*
              call s:StarSetf('apachestyle')
    */etc/proftpd/conf.*/*
              call s:StarSetf('apachestyle')
    proftpd.conf*
              call s:StarSetf('apachestyle')
    access.conf*
              call s:StarSetf('apache')
    apache.conf*
              call s:StarSetf('apache')
    apache2.conf*
              call s:StarSetf('apache')
    httpd.conf*
              call s:StarSetf('apache')
    srm.conf* call s:StarSetf('apache')
    */etc/apache2/*.conf*
              call s:StarSetf('apache')
    */etc/apache2/conf.*/*
              call s:StarSetf('apache')
    */etc/apache2/mods-*/*
              call s:StarSetf('apache')
    */etc/apache2/sites-*/*
              call s:StarSetf('apache')
    */etc/httpd/conf.d/*.conf*
              call s:StarSetf('apache')
    *asterisk/*.conf*
              call s:StarSetf('asterisk')
    *asterisk*/*voicemail.conf*
              call s:StarSetf('asteriskvm')
    bzr_log.* setf bzr
    */named/db.*
              call s:StarSetf('bindzone')
    */bind/db.*
              call s:StarSetf('bindzone')
    */.calendar/*
              call s:StarSetf('calendar')
    */share/calendar/*/calendar.*
              call s:StarSetf('calendar')
    */share/calendar/calendar.*
              call s:StarSetf('calendar')
    [cC]hange[lL]og*
              if getline(1) =~ '; urgency='|  call s:StarSetf('debchangelog')|else|  call s:StarSetf('changelog')|endif
    crontab   call s:StarSetf('crontab')
    crontab.* call s:StarSetf('crontab')
    */etc/cron.d/*
              call s:StarSetf('crontab')
    */etc/dnsmasq.d/*
              call s:StarSetf('dnsmasq')
    drac.*    call s:StarSetf('dracula')
    */.fvwm/* call s:StarSetf('fvwm')
    *fvwmrc*  let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm95*.hook
              let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm2rc* if expand("<afile>:e") == "m4"|  call s:StarSetf('fvwm2m4')|else|  let b:fvwm_version = 2 | call s:StarSetf('fvwm')|endif
    */tmp/lltmp*
              call s:StarSetf('gedcom')
    */.gitconfig.d/*
              call s:StarSetf('gitconfig')
    /etc/gitconfig.d/*
              call s:StarSetf('gitconfig')
    */gitolite-admin/conf/*
              call s:StarSetf('gitolite')
    .gtkrc*   call s:StarSetf('gtkrc')
    gtkrc*    call s:StarSetf('gtkrc')
    Prl*.*    call s:StarSetf('jam')
    JAM*.*    call s:StarSetf('jam')
    *jarg*    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'THIS IS THE JARGON FILE'|  call s:StarSetf('jargon')|endif
    *.properties_??_??_*
              call s:StarSetf('jproperties')
    Kconfig.* call s:StarSetf('kconfig')
    lilo.conf*
              call s:StarSetf('lilo')
    */etc/logcheck/*.d*/*
              call s:StarSetf('logcheck')
    [mM]akefile*
              call s:StarSetf('make')
    [rR]akefile*
              call s:StarSetf('ruby')
    {neo,}mutt[[:alnum:]._-]\\\{6\}
              setf mail
    reportbug-*
              call s:StarSetf('mail')
    */etc/modutils/*
              if executable(expand("<afile>")) != 1|  call s:StarSetf('modconf')|endif
    */etc/modprobe.*
              call s:StarSetf('modconf')
    .mutt{ng,}rc*
              call s:StarSetf('muttrc')
    */.mutt{ng,}/mutt{ng,}rc*
              call s:StarSetf('muttrc')
    mutt{ng,}rc*
              call s:StarSetf('muttrc')
    Mutt{ng,}rc*
              call s:StarSetf('muttrc')
    .neomuttrc*
              call s:StarSetf('neomuttrc')
    */.neomutt/neomuttrc*
              call s:StarSetf('neomuttrc')
    neomuttrc*
              call s:StarSetf('neomuttrc')
    Neomuttrc*
              call s:StarSetf('neomuttrc')
    tmac.*    call s:StarSetf('nroff')
    /etc/hostname.*
              call s:StarSetf('config')
    */etc/pam.d/*
              call s:StarSetf('pamconf')
    *printcap*
              if !did_filetype()|  let b:ptcap_type = "print" | call s:StarSetf('ptcap')|endif
    *termcap* if !did_filetype()|  let b:ptcap_type = "term" | call s:StarSetf('ptcap')|endif
    *.rdf     call dist#ft#Redif()
    .reminders*
              call s:StarSetf('remind')
    sgml.catalog*
              call s:StarSetf('catalog')
    .bashrc*  call dist#ft#SetFileTypeSH("bash")
    .bash[_-]profile*
              call dist#ft#SetFileTypeSH("bash")
    .bash[_-]logout*
              call dist#ft#SetFileTypeSH("bash")
    .bash[_-]aliases*
              call dist#ft#SetFileTypeSH("bash")
    bash-fc[-.]*
              call dist#ft#SetFileTypeSH("bash")
    PKGBUILD* call dist#ft#SetFileTypeSH("bash")
    .kshrc*   call dist#ft#SetFileTypeSH("ksh")
    .profile* call dist#ft#SetFileTypeSH(getline(1))
    .tcshrc*  call dist#ft#SetFileTypeShell("tcsh")
    .login*   call dist#ft#CSH()
    .cshrc*   call dist#ft#CSH()
    *.vhdl_[0-9]*
              call s:StarSetf('vhdl')
    *vimrc*   call s:StarSetf('vim')
    svn-commit*.tmp
              setf svn
    Xresources*
              call s:StarSetf('xdefaults')
    */app-defaults/*
              call s:StarSetf('xdefaults')
    */Xresources/*
              call s:StarSetf('xdefaults')
    XF86Config-4*
              let b:xf86conf_xfree86_version = 4 | call s:StarSetf('xf86conf')
    XF86Config*
              if getline(1) =~ '\<XConfigurator\>'|  let b:xf86conf_xfree86_version = 3|endif|call s:StarSetf('xf86conf')
    *xmodmap* call s:StarSetf('xmodmap')
    */etc/xinetd.d/*
              call s:StarSetf('xinetd')
    */etc/yum.repos.d/*
              call s:StarSetf('dosini')
    .zsh*     call s:StarSetf('zsh')
    .zlog*    call s:StarSetf('zsh')
    .zcompdump*
              call s:StarSetf('zsh')
    zsh*      call s:StarSetf('zsh')
    zlog*     call s:StarSetf('zsh')
    *.text    setf text
    README    setf text
    *.txt     if getline('$') !~ 'vim:.*ft=help'|   setf text| endif       
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf FALLBACK conf | endif
nvim_terminal  BufReadCmd
    term://*  :if !exists('b:term_title')|call termopen( matchstr(expand("<amatch>"), '\c\mterm://\%(.\{-}//\%(\d\+:\)\?\)\?\zs.*'), {'cwd': get(matchlist(expand("<amatch>"), '\c\mterm://\(.\{-}\)//'), 1, '')})|endif
filetypedetect  BufReadPost
    ?\+.orig  exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.bak   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.old   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.new   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-dist
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-old
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-new
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.dpkg-bak
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmsave
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.rpmnew
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.pacsave
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    ?\+.pacnew
              exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r"))
    *~        let s:name = expand("<afile>") | let s:short = substitute(s:name, '\~$', '', '') | if s:name != s:short && s:short != "" |   exe "doau filetypedetect BufRead " . fnameescape(s:short) | endif | unlet! s:name s:short
    ?\+.in    if expand("<afile>:t") != "configure.in" |   exe "doau filetypedetect BufRead " . fnameescape(expand("<afile>:r")) | endif
    /usr/share/nvim/runtime/doc/*.txt
              setf help
    *.inp     call dist#ft#Check_inp()
    *.8th     setf 8th
    *.aap     setf aap
    */etc/a2ps.cfg
              setf a2ps
    */etc/a2ps/*.cfg
              setf a2ps
    a2psrc    setf a2ps
    .a2psrc   setf a2ps
    *.abap    setf abap
    *.abc     setf abc
    *.abl     setf abel
    *.wrm     setf acedb
    *.adb     setf ada
    *.ads     setf ada
    *.ada     setf ada
    *.gpr     setf ada
    *.tdf     setf ahdl
    *.run     setf ampl
    build.xml setf ant
    *.ino     setf arduino
    *.pde     setf arduino
    .htaccess setf apache
    */etc/httpd/*.conf
              setf apache
    */etc/apache2/sites-*/*.com
              setf apache
    *.a65     setf a65
    *.scpt    setf applescript
    *.am      if expand("<afile>") !~? 'Makefile.am\>' | setf elf | endif
    .asoundrc setf alsaconf
    */usr/share/alsa/alsa.conf
              setf alsaconf
    */etc/asound.conf
              setf alsaconf
    *.aml     setf aml
    apt.conf  setf aptconf
    */.aptitude/config
              setf aptconf
    */etc/apt/apt.conf.d/{[-_[:alnum:]]\+,[-_.[:alnum:]]\+.conf}
              setf aptconf
    .arch-inventory
              setf arch
    =tagging-method
              setf arch
    *.art     setf art
    *.asciidoc
              setf asciidoc
    *.adoc    setf asciidoc
    *.asn     setf asn
    *.asn1    setf asn
    *.asa     if exists("g:filetype_asa") |   exe "setf " . g:filetype_asa | else |   setf aspvbs | endif
    *.asp     if exists("g:filetype_asp") |   exe "setf " . g:filetype_asp | elseif getline(1) . getline(2) . getline(3) =~? "perlscript" |   setf aspperl | else |   setf aspvbs | endif
    */boot/grub/menu.lst
              setf grub
    */boot/grub/grub.conf
              setf grub
    */etc/grub.conf
              setf grub
    *.asm     call dist#ft#FTasm()
    *.[sS]    call dist#ft#FTasm()
    *.[aA]    call dist#ft#FTasm()
    *.mac     call dist#ft#FTasm()
    *.lst     call dist#ft#FTasm()
    *.mar     setf vmasm
    *.atl     setf atlas
    *.as      setf atlas
    *.au3     setf autoit
    *.ahk     setf autohotkey
    [mM]akefile.am
              setf automake
    GNUmakefile.am
              setf automake
    *.at      setf m4
    *.ave     setf ave
    *.awk     setf awk
    *.mch     setf b
    *.ref     setf b
    *.imp     setf b
    *.bas     call dist#ft#FTVB("basic")
    *.vb      setf vb
    *.vbs     setf vb
    *.dsm     setf vb
    *.ctl     setf vb
    *.iba     setf ibasic
    *.ibi     setf ibasic
    *.fb      setf freebasic
    *.bi      setf freebasic
    *.bat     setf dosbatch
    *.sys     setf dosbatch
    *.cmd     if getline(1) =~ '^/\*' | setf rexx | else | setf dosbatch | endif
    *.btm     call dist#ft#FTbtm()
    *.bc      setf bc
    *.bdf     setf bdf
    *.bib     setf bib
    *.bst     setf bst
    named*.conf
              setf named
    rndc*.conf
              setf named
    rndc*.key setf named
    named.root
              setf bindzone
    *.db      call dist#ft#BindzoneCheck('')
    *.bl      setf blank
    */etc/blkid.tab
              setf xml
    */etc/blkid.tab.old
              setf xml
    *.bzl     setf bzl
    WORKSPACE setf bzl
    BUILD.bazel
              setf bzl
    BUILD     setf bzl
    *.c       call dist#ft#FTlpc()
    *.lpc     setf lpc
    *.ulpc    setf lpc
    calendar  setf calendar
    *.cs      setf cs
    *.csdl    setf csdl
    *.cabal   setf cabal
    *.toc     setf cdrtoc
    */etc/cdrdao.conf
              setf cdrdaoconf
    */etc/defaults/cdrdao
              setf cdrdaoconf
    */etc/default/cdrdao
              setf cdrdaoconf
    .cdrdao   setf cdrdaoconf
    cfengine.conf
              setf cfengine
    *.chai    setf chaiscript
    *.cdl     setf cdl
    *.recipe  setf conaryrecipe
    *.crm     setf crm
    *.cyn     setf cynpp
    *.cc      if exists("cynlib_syntax_for_cc")|setf cynlib|else|setf cpp|endif
    *.cpp     if exists("cynlib_syntax_for_cpp")|setf cynlib|else|setf cpp|endif
    *.cxx     setf cpp
    *.c++     setf cpp
    *.hh      setf cpp
    *.hxx     setf cpp
    *.hpp     setf cpp
    *.ipp     setf cpp
    *.moc     setf cpp
    *.tcc     setf cpp
    *.inl     setf cpp
    *.C       setf cpp
    *.H       setf cpp
    *.h       call dist#ft#FTheader()
    *.chf     setf ch
    *.tlh     setf cpp
    *.css     setf css
    *.con     setf cterm
    changelog.Debian
              setf debchangelog
    changelog.dch
              setf debchangelog
    NEWS.Debian
              setf debchangelog
    NEWS.dch  setf debchangelog
    [cC]hange[lL]og
              if getline(1) =~ '; urgency='|   setf debchangelog| else|   setf changelog| endif
    NEWS      if getline(1) =~ '; urgency='|   setf debchangelog| endif
    *..ch     setf chill
    *.ch      call dist#ft#FTchange()
    *.chopro  setf chordpro
    *.crd     setf chordpro
    *.cho     setf chordpro
    *.crdpro  setf chordpro
    *.chordpro
              setf chordpro
    *.dcl     setf clean
    *.icl     setf clean
    *.eni     setf cl
    *.ent     call dist#ft#FTent()
    *.prg     if exists("g:filetype_prg") |   exe "setf " . g:filetype_prg | else |   setf clipper | endif
    *.clj     setf clojure
    *.cljs    setf clojure
    *.cljx    setf clojure
    *.cljc    setf clojure
    CMakeLists.txt
              setf cmake
    *.cmake   setf cmake
    *.cmake.in
              setf cmake
    */.cmus/{autosave,rc,command-history,*.theme}
              setf cmusrc
    */cmus/{rc,*.theme}
              setf cmusrc
    *.cbl     setf cobol
    *.cob     setf cobol
    *.lib     setf cobol
    *.cpy     if getline(1) =~ '^##' |   setf python | else |   setf cobol | endif
    *.atg     setf coco
    *.cfm     setf cf
    *.cfi     setf cf
    *.cfc     setf cf
    configure.in
              setf config
    configure.ac
              setf config
    *.cu      setf cuda
    *.cuh     setf cuda
    Dockerfile
              setf dockerfile
    *.Dockerfile
              setf dockerfile
    *.dcd     setf dcd
    *enlightenment/*.cfg
              setf c
    *Eterm/*.cfg
              setf eterm
    *.eu      call dist#ft#EuphoriaCheck()
    *.ew      call dist#ft#EuphoriaCheck()
    *.ex      call dist#ft#EuphoriaCheck()
    *.exu     call dist#ft#EuphoriaCheck()
    *.exw     call dist#ft#EuphoriaCheck()
    *.EU      call dist#ft#EuphoriaCheck()
    *.EW      call dist#ft#EuphoriaCheck()
    *.EX      call dist#ft#EuphoriaCheck()
    *.EXU     call dist#ft#EuphoriaCheck()
    *.EXW     call dist#ft#EuphoriaCheck()
    lynx.cfg  setf lynx
    *baseq[2-3]/*.cfg
              setf quake
    *id1/*.cfg
              setf quake
    *quake[1-3]/*.cfg
              setf quake
    *.qc      setf c
    *.cfg     setf cfg
    *.feature setf cucumber
    *.csp     setf csp
    *.fdr     setf csp
    *.pld     setf cupl
    *.si      setf cuplsim
    */debian/control
              setf debcontrol
    control   if getline(1) =~ '^Source:'|   setf debcontrol| endif
    */debian/copyright
              setf debcopyright
    copyright if getline(1) =~ '^Format:'|   setf debcopyright| endif
    */etc/apt/sources.list
              setf debsources
    */etc/apt/sources.list.d/*.list
              setf debsources
    denyhosts.conf
              setf denyhosts
    */etc/dnsmasq.conf
              setf dnsmasq
    *.desc    setf desc
    *.d       call dist#ft#DtraceCheck()
    *.desktop setf desktop
    .directory
              setf desktop
    dict.conf setf dictconf
    .dictrc   setf dictconf
    dictd.conf
              setf dictdconf
    *.diff    setf diff
    *.rej     setf diff
    *.patch   if getline(1) =~ '^From [0-9a-f]\{40\} Mon Sep 17 00:00:00 2001$' |   setf gitsendemail | else |   setf diff | endif
    .dir_colors
              setf dircolors
    .dircolors
              setf dircolors
    */etc/DIR_COLORS
              setf dircolors
    *.rul     if getline(1).getline(2).getline(3).getline(4).getline(5).getline(6) =~? 'InstallShield' |   setf ishd | else |   setf diva | endif
    *.com     call dist#ft#BindzoneCheck('dcl')
    *.dot     setf dot
    *.lid     setf dylanlid
    *.intr    setf dylanintr
    *.dylan   setf dylan
    *.def     setf def
    *.drac    setf dracula
    *.drc     setf dracula
    *lvs      setf dracula
    *lpe      setf dracula
    *.ds      setf datascript
    *.dsl     setf dsl
    *.dtd     setf dtd
    *.dts     setf dts
    *.dtsi    setf dts
    *.ed\(f\|if\|o\)
              setf edif
    *.edn     if getline(1) =~ '^\s*(\s*edif\>' |   setf edif | else |   setf clojure | endif
    .editorconfig
              setf dosini
    *.ecd     setf ecd
    *.e       call dist#ft#FTe()
    *.E       call dist#ft#FTe()
    */etc/elinks.conf
              setf elinks
    */.elinks/elinks.conf
              setf elinks
    *.erl     setf erlang
    *.hrl     setf erlang
    *.yaws    setf erlang
    filter-rules
              setf elmfilt
    *esmtprc  setf esmtprc
    *.ec      setf esqlc
    *.EC      setf esqlc
    *.strl    setf esterel
    *.csc     setf csc
    exim.conf setf exim
    *.exp     setf expect
    exports   setf exports
    *.fal     setf falcon
    *.fan     setf fan
    *.fwt     setf fan
    *.factor  setf factor
    .fetchmailrc
              setf fetchmail
    *.fex     setf focexec
    *.focexec setf focexec
    auto.master
              setf conf
    *.mas     setf master
    *.master  setf master
    *.fs      setf forth
    *.ft      setf forth
    *.fth     setf forth
    *.frt     setf reva
    *.F       setf fortran
    *.FOR     setf fortran
    *.FPP     setf fortran
    *.FTN     setf fortran
    *.F77     setf fortran
    *.F90     setf fortran
    *.F95     setf fortran
    *.F03     setf fortran
    *.F08     setf fortran
    *.f       setf fortran
    *.for     setf fortran
    *.fortran setf fortran
    *.fpp     setf fortran
    *.ftn     setf fortran
    *.f77     setf fortran
    *.f90     setf fortran
    *.f95     setf fortran
    *.f03     setf fortran
    *.f08     setf fortran
    *.fsl     setf framescript
    fstab     setf fstab
    mtab      setf fstab
    .gdbinit  setf gdb
    *.mo      setf gdmo
    *.gdmo    setf gdmo
    *.ged     setf gedcom
    lltxxxxx.txt
              setf gedcom
    COMMIT_EDITMSG
              setf gitcommit
    MERGE_MSG setf gitcommit
    TAG_EDITMSG
              setf gitcommit
    *.git/config
              setf gitconfig
    .gitconfig
              setf gitconfig
    /etc/gitconfig
              setf gitconfig
    */.config/git/config
              setf gitconfig
    .gitmodules
              setf gitconfig
    *.git/modules/*/config
              setf gitconfig
    /home/violeine/.config/git/config
              setf gitconfig
    git-rebase-todo
              setf gitrebase
    .gitsendemail.msg.??????
              setf gitsendemail
    .msg.[0-9]*
              if getline(1) =~ '^From.*# This line is ignored.$' |   setf gitsendemail | endif
    *.git/*   if getline(1) =~ '^\x\{40\}\>\|^ref: ' |   setf git | endif
    gkrellmrc setf gkrellmrc
    gkrellmrc_?
              setf gkrellmrc
    *.gp      setf gp
    .gprc     setf gp
    */.gnupg/options
              setf gpg
    */.gnupg/gpg.conf
              setf gpg
    */usr/*/gnupg/options.skel
              setf gpg
    gnashrc   setf gnash
    .gnashrc  setf gnash
    gnashpluginrc
              setf gnash
    .gnashpluginrc
              setf gnash
    gitolite.conf
              setf gitolite
    {,.}gitolite.rc
              setf perl
    example.gitolite.rc
              setf perl
    *.gpi     setf gnuplot
    *.go      setf go
    *.gs      setf grads
    *.gretl   setf gretl
    *.gradle  setf groovy
    *.groovy  setf groovy
    *.gsp     setf gsp
    */etc/group
              setf group
    */etc/group-
              setf group
    */etc/group.edit
              setf group
    */etc/gshadow
              setf group
    */etc/gshadow-
              setf group
    */etc/gshadow.edit
              setf group
    */var/backups/group.bak
              setf group
    */var/backups/gshadow.bak
              setf group
    .gtkrc    setf gtkrc
    gtkrc     setf gtkrc
    *.haml    setf haml
    *.hsc     setf hamster
    *.hsm     setf hamster
    *.hs      setf haskell
    *.hs-boot setf haskell
    *.lhs     setf lhaskell
    *.chs     setf chaskell
    *.ht      setf haste
    *.htpp    setf hastepreproc
    *.vc      setf hercules
    *.ev      setf hercules
    *.sum     setf hercules
    *.errsum  setf hercules
    *.hex     setf hex
    *.h32     setf hex
    *.hws     setf hollywood
    *.t.html  setf tilde
    *.html    call dist#ft#FThtml()
    *.htm     call dist#ft#FThtml()
    *.shtml   call dist#ft#FThtml()
    *.stm     call dist#ft#FThtml()
    *.erb     setf eruby
    *.rhtml   setf eruby
    *.html.m4 setf htmlm4
    *.tmpl    setf template
    */etc/host.conf
              setf hostconf
    */etc/hosts.allow
              setf hostsaccess
    */etc/hosts.deny
              setf hostsaccess
    *.hb      setf hb
    *.htt     setf httest
    *.htb     setf httest
    *.icn     setf icon
    *.idl     call dist#ft#FTidl()
    *.odl     setf msidl
    *.mof     setf msidl
    */.icewm/menu
              setf icemenu
    .indent.pro
              setf indent
    indent.pro
              call dist#ft#ProtoCheck('indent')
    *.pro     call dist#ft#ProtoCheck('idlang')
    indentrc  setf indent
    *.inf     setf inform
    *.INF     setf inform
    */etc/initng/*/*.i
              setf initng
    *.ii      setf initng
    upstream.dat\c
              setf upstreamdat
    upstream.*.dat\c
              setf upstreamdat
    *.upstream.dat\c
              setf upstreamdat
    fdrupstream.log
              setf upstreamlog
    upstream.log\c
              setf upstreamlog
    upstream.*.log\c
              setf upstreamlog
    *.upstream.log\c
              setf upstreamlog
    UPSTREAM-*.log\c
              setf upstreamlog
    upstreaminstall.log\c
              setf upstreaminstalllog
    upstreaminstall.*.log\c
              setf upstreaminstalllog
    *.upstreaminstall.log\c
              setf upstreaminstalllog
    usserver.log\c
              setf usserverlog
    usserver.*.log\c
              setf usserverlog
    *.usserver.log\c
              setf usserverlog
    usw2kagt.log\c
              setf usw2kagtlog
    usw2kagt.*.log\c
              setf usw2kagtlog
    *.usw2kagt.log\c
              setf usw2kagtlog
    ipf.conf  setf ipfilter
    ipf6.conf setf ipfilter
    ipf.rules setf ipfilter
    *.4gl     setf fgl
    *.4gh     setf fgl
    *.m4gl    setf fgl
    *.ini     setf dosini
    inittab   setf inittab
    *.iss     setf iss
    *.ijs     setf j
    *.jal     setf jal
    *.JAL     setf jal
    *.jpl     setf jam
    *.jpr     setf jam
    *.java    setf java
    *.jav     setf java
    *.jj      setf javacc
    *.jjt     setf javacc
    *.js      setf javascript
    *.javascript
              setf javascript
    *.es      setf javascript
    *.mjs     setf javascript
    *.jsx     setf javascriptreact
    *.jsp     setf jsp
    *.properties
              setf jproperties
    *.properties_??
              setf jproperties
    *.properties_??_??
              setf jproperties
    *.clp     setf jess
    *.jgr     setf jgraph
    *.jov     setf jovial
    *.j73     setf jovial
    *.jovial  setf jovial
    *.json    setf json
    *.jsonp   setf json
    *.webmanifest
              setf json
    *.kix     setf kix
    *.k       setf kwt
    *.kv      setf kivy
    *.ks      setf kscript
    Kconfig   setf kconfig
    Kconfig.debug
              setf kconfig
    *.ace     setf lace
    *.ACE     setf lace
    *.latte   setf latte
    *.lte     setf latte
    */etc/limits
              setf limits
    */etc/*limits.conf
              setf limits
    */etc/*limits.d/*.conf
              setf limits
    *.sig     setf lprolog
    *.ldif    setf ldif
    *.ld      setf ld
    *.less    setf less
    *.lex     setf lex
    *.l       setf lex
    *.lxx     setf lex
    *.l++     setf lex
    */etc/libao.conf
              setf libao
    */.libao  setf libao
    */etc/sensors.conf
              setf sensors
    */etc/sensors3.conf
              setf sensors
    lftp.conf setf lftp
    .lftprc   setf lftp
    *lftp/rc  setf lftp
    *.ll      setf lifelines
    lilo.conf setf lilo
    *.lsp     setf lisp
    *.lisp    setf lisp
    *.el      setf lisp
    *.cl      setf lisp
    *.jl      setf lisp
    *.L       setf lisp
    .emacs    setf lisp
    .sawfishrc
              setf lisp
    sbclrc    setf lisp
    .sbclrc   setf lisp
    *.liquid  setf liquid
    *.lite    setf lite
    *.lt      setf lite
    */LiteStep/*/*.rc
              setf litestep
    */etc/login.access
              setf loginaccess
    */etc/login.defs
              setf logindefs
    *.lgt     setf logtalk
    *.lot     setf lotos
    *.lotos   setf lotos
    *.lou     setf lout
    *.lout    setf lout
    *.lua     setf lua
    *.rockspec
              setf lua
    *.lsl     setf lsl
    *.lss     setf lss
    *.m4      if expand("<afile>") !~? 'html.m4$\|fvwm2rc' | setf m4 | endif
    *.mgp     setf mgp
    snd.\d\+  setf mail
    .letter   setf mail
    .letter.\d\+
              setf mail
    .followup setf mail
    .article  setf mail
    .article.\d\+
              setf mail
    pico.\d\+ setf mail
    mutt{ng,}-*-\w\+
              setf mail
    mutt[[:alnum:]_-]\\\{6\}
              setf mail
    neomutt-*-\w\+
              setf mail
    neomutt[[:alnum:]_-]\\\{6\}
              setf mail
    ae\d\+.txt
              setf mail
    /tmp/SLRN[0-9A-Z.]\+
              setf mail
    *.eml     setf mail
    */etc/mail/aliases
              setf mailaliases
    */etc/aliases
              setf mailaliases
    .mailcap  setf mailcap
    mailcap   setf mailcap
    *[mM]akefile
              setf make
    *.mk      setf make
    *.mak     setf make
    *.dsp     setf make
    *.ist     setf ist
    *.mst     setf ist
    *.page    setf mallard
    *.man     setf nroff
    */etc/man.conf
              setf manconf
    man.config
              setf manconf
    *.mv      setf maple
    *.mpl     setf maple
    *.mws     setf maple
    *.map     setf map
    *.markdown
              setf markdown
    *.mdown   setf markdown
    *.mkd     setf markdown
    *.mkdn    setf markdown
    *.mdwn    setf markdown
    *.md      setf markdown
    *.mason   setf mason
    *.mhtml   setf mason
    *.comp    setf mason
    *.m       call dist#ft#FTm()
    *.nb      setf mma
    *.mel     setf mel
    hg-editor-*.txt
              setf hgcommit
    *.hgrc    setf cfg
    *hgrc     setf cfg
    */log/{auth,cron,daemon,debug,kern,lpr,mail,messages,news/news,syslog,user}{,.log,.err,.info,.warn,.crit,.notice}{,.[0-9]*,-[0-9]*}
              setf messages
    *.mf      setf mf
    *.mp      setf mp
    *.mgl     setf mgl
    *.mix     setf mix
    *.mixal   setf mix
    *.mms     call dist#ft#FTmms()
    *.mmp     setf mmp
    *.mod     if getline(1) =~ '\<module\>' |   setf lprolog | else |   setf modsim3 | endif
    *.m2      setf modula2
    *.DEF     setf modula2
    *.MOD     setf modula2
    *.mi      setf modula2
    *.[mi][3g]
              setf modula3
    *.isc     setf monk
    *.monk    setf monk
    *.ssc     setf monk
    *.tsc     setf monk
    *.moo     setf moo
    */etc/modules.conf
              setf modconf
    */etc/modules
              setf modconf
    */etc/conf.modules
              setf modconf
    mplayer.conf
              setf mplayerconf
    */.mplayer/config
              setf mplayerconf
    *.s19     setf srec
    *.s28     setf srec
    *.s37     setf srec
    *.mot     setf srec
    *.srec    setf srec
    mrxvtrc   setf mrxvtrc
    .mrxvtrc  setf mrxvtrc
    *.msql    setf msql
    *.mysql   setf mysql
    */etc/Muttrc.d/*
              call s:StarSetf('muttrc')
    *.rc      setf rc
    *.rch     setf rc
    *.mu      setf mupad
    *.mush    setf mush
    Mutt{ng,}rc
              setf muttrc
    *.n1ql    setf n1ql
    *.nql     setf n1ql
    */etc/nanorc
              setf nanorc
    *.nanorc  setf nanorc
    *.NS[ACGLMNPS]
              setf natural
    Neomuttrc setf neomuttrc
    .netrc    setf netrc
    *.ninja   setf ninja
    *.ncf     setf ncf
    *.me      if expand("<afile>") != "read.me" && expand("<afile>") != "click.me" |   setf nroff | endif
    *.tr      setf nroff
    *.nr      setf nroff
    *.roff    setf nroff
    *.tmac    setf nroff
    *.mom     setf nroff
    *.[1-9]   call dist#ft#FTnroff()
    *.mm      call dist#ft#FTmm()
    *.nqc     setf nqc
    *.nse     setf lua
    *.nsi     setf nsis
    *.nsh     setf nsis
    *.ml      setf ocaml
    *.mli     setf ocaml
    *.mll     setf ocaml
    *.mly     setf ocaml
    .ocamlinit
              setf ocaml
    *.occ     setf occam
    *.xom     setf omnimark
    *.xin     setf omnimark
    *.or      setf openroad
    *.[Oo][Pp][Ll]
              setf opl
    *.ora     setf ora
    pf.conf   setf pf
    */etc/pam.conf
              setf pamconf
    *.papp    setf papp
    *.pxml    setf papp
    *.pxsl    setf papp
    */etc/passwd
              setf passwd
    */etc/passwd-
              setf passwd
    */etc/passwd.edit
              setf passwd
    */etc/shadow
              setf passwd
    */etc/shadow-
              setf passwd
    */etc/shadow.edit
              setf passwd
    */var/backups/passwd.bak
              setf passwd
    */var/backups/shadow.bak
              setf passwd
    *.pas     setf pascal
    *.dpr     setf pascal
    *.pdf     setf pdf
    *.pcmk    setf pcmk
    *.pl      call dist#ft#FTpl()
    *.PL      call dist#ft#FTpl()
    *.plx     setf perl
    *.al      setf perl
    *.psgi    setf perl
    *.p6      setf perl6
    *.pm6     setf perl6
    *.pl6     setf perl6
    *.pm      if getline(1) =~ "XPM2" |   setf xpm2 | elseif getline(1) =~ "XPM" |   setf xpm | else |   setf perl | endif
    *.pod     setf pod
    *.pod6    setf pod6
    *.php     setf php
    *.php\d   setf php
    *.phtml   setf php
    *.ctp     setf php
    *.pike    setf pike
    *.pmod    setf pike
    *.cmod    setf cmod
    */etc/pinforc
              setf pinfo
    */.pinforc
              setf pinfo
    *.rcp     setf pilrc
    .pinerc   setf pine
    pinerc    setf pine
    .pinercex setf pine
    pinercex  setf pine
    Pipfile   setf config
    Pipfile.lock
              setf json
    *.pli     setf pli
    *.pl1     setf pli
    *.plm     setf plm
    *.p36     setf plm
    *.pac     setf plm
    *.pls     setf plsql
    *.plsql   setf plsql
    *.plp     setf plp
    *.po      setf po
    *.pot     setf po
    main.cf   setf pfmain
    *.ps      setf postscr
    *.pfa     setf postscr
    *.afm     setf postscr
    *.eps     setf postscr
    *.epsf    setf postscr
    *.epsi    setf postscr
    *.ai      setf postscr
    *.ppd     setf ppd
    *.pov     setf pov
    .povrayrc setf povini
    *.inc     call dist#ft#FTinc()
    *printcap let b:ptcap_type = "print" | setf ptcap
    *termcap  let b:ptcap_type = "term" | setf ptcap
    *.g       setf pccts
    *.it      setf ppwiz
    *.ih      setf ppwiz
    *.obj     setf obj
    *.pc      setf proc
    *.action  setf privoxy
    .procmail setf procmail
    .procmailrc
              setf procmail
    *.w       call dist#ft#FTprogress_cweb()
    *.i       call dist#ft#FTprogress_asm()
    *.p       call dist#ft#FTprogress_pascal()
    *.psf     setf psf
    INDEX     if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    INFO      if getline(1) =~ '^\s*\(distribution\|installed_software\|root\|bundle\|product\)\s*$' |   setf psf | endif
    *.pdb     setf prolog
    *.pml     setf promela
    *.proto   setf proto
    */etc/protocols
              setf protocols
    *.pyx     setf pyrex
    *.pxd     setf pyrex
    *.py      setf python
    *.pyw     setf python
    .pythonstartup
              setf python
    .pythonrc setf python
    *.ptl     setf python
    *.pyi     setf python
    *.rad     setf radiance
    *.mat     setf radiance
    .ratpoisonrc
              setf ratpoison
    ratpoisonrc
              setf ratpoison
    *\,v      setf rcs
    .inputrc  setf readline
    inputrc   setf readline
    *.reg     if getline(1) =~? '^REGEDIT[0-9]*\s*$\|^Windows Registry Editor Version \d*\.\d*\s*$' | setf registry | endif
    *.rib     setf rib
    *.rex     setf rexx
    *.orx     setf rexx
    *.rxo     setf rexx
    *.rxj     setf rexx
    *.jrexx   setf rexx
    *.rexxj   setf rexx
    *.rexx    setf rexx
    *.testGroup
              setf rexx
    *.testUnit
              setf rexx
    *.s       setf r
    *.S       setf r
    *.rd      setf rhelp
    *.Rd      setf rhelp
    *.Rnw     setf rnoweb
    *.rnw     setf rnoweb
    *.Snw     setf rnoweb
    *.snw     setf rnoweb
    *.Rmd     setf rmd
    *.rmd     setf rmd
    *.Smd     setf rmd
    *.smd     setf rmd
    *.Rrst    setf rrst
    *.rrst    setf rrst
    *.Srst    setf rrst
    *.srst    setf rrst
    *.r       call dist#ft#FTr()
    *.R       call dist#ft#FTr()
    .reminders
              setf remind
    *.remind  setf remind
    *.rem     setf remind
    resolv.conf
              setf resolv
    *.rnc     setf rnc
    *.rng     setf rng
    *.rpl     setf rpl
    robots.txt
              setf robots
    *.x       setf rpcgen
    *.rst     setf rst
    *.rtf     setf rtf
    .irbrc    setf ruby
    irbrc     setf ruby
    *.rb      setf ruby
    *.rbw     setf ruby
    *.gemspec setf ruby
    *.rs      setf rust
    *.ru      setf ruby
    Gemfile   setf ruby
    *.builder setf ruby
    *.rxml    setf ruby
    *.rjs     setf ruby
    [rR]antfile
              setf ruby
    *.rant    setf ruby
    [rR]akefile
              setf ruby
    *.rake    setf ruby
    *.sl      setf slang
    smb.conf  setf samba
    *.sas     setf sas
    *.sass    setf sass
    *.sa      setf sather
    *.scala   setf scala
    *.sbt     setf sbt
    *.sci     setf scilab
    *.sce     setf scilab
    *.scss    setf scss
    *.sd      setf sd
    *.sdl     setf sdl
    *.pr      setf sdl
    *.sed     setf sed
    *.siv     setf sieve
    *.sieve   setf sieve
    sendmail.cf
              setf sm
    *.mc      call dist#ft#McSetf()
    */etc/services
              setf services
    */etc/slp.conf
              setf slpconf
    */etc/slp.reg
              setf slpreg
    */etc/slp.spi
              setf slpspi
    */etc/serial.conf
              setf setserial
    *.sgm     if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type = "sgml" |   let b:docbk_ver = 4 |   setf docbk | else |   setf sgml | endif
    *.sgml    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'linuxdoc' |   setf sgmllnx | elseif getline(1) =~ '<!DOCTYPE.*DocBook' || getline(2) =~ '<!DOCTYPE.*DocBook' |   let b:docbk_type = "sgml" |   let b:docbk_ver = 4 |   setf docbk | else |   setf sgml | endif
    *.decl    if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dcl     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    *.dec     if getline(1).getline(2).getline(3) =~? '^<!SGML' |    setf sgmldecl | endif
    catalog   setf catalog
    .bashrc   call dist#ft#SetFileTypeSH("bash")
    bashrc    call dist#ft#SetFileTypeSH("bash")
    bash.bashrc
              call dist#ft#SetFileTypeSH("bash")
    .bash[_-]profile
              call dist#ft#SetFileTypeSH("bash")
    .bash[_-]logout
              call dist#ft#SetFileTypeSH("bash")
    .bash[_-]aliases
              call dist#ft#SetFileTypeSH("bash")
    bash-fc[-.]
              call dist#ft#SetFileTypeSH("bash")
    *.bash    call dist#ft#SetFileTypeSH("bash")
    */{,.}bash[_-]completion{,.d,.sh}{,/*}
              call dist#ft#SetFileTypeSH("bash")
    *.ebuild  call dist#ft#SetFileTypeSH("bash")
    *.eclass  call dist#ft#SetFileTypeSH("bash")
    PKGBUILD  call dist#ft#SetFileTypeSH("bash")
    .kshrc    call dist#ft#SetFileTypeSH("ksh")
    *.ksh     call dist#ft#SetFileTypeSH("ksh")
    */etc/profile
              call dist#ft#SetFileTypeSH(getline(1))
    .profile  call dist#ft#SetFileTypeSH(getline(1))
    *.sh      call dist#ft#SetFileTypeSH(getline(1))
    *.env     call dist#ft#SetFileTypeSH(getline(1))
    *.install if getline(1) =~ '<?php' |   setf php | else |   call dist#ft#SetFileTypeSH("bash") | endif
    .tcshrc   call dist#ft#SetFileTypeShell("tcsh")
    *.tcsh    call dist#ft#SetFileTypeShell("tcsh")
    tcsh.tcshrc
              call dist#ft#SetFileTypeShell("tcsh")
    tcsh.login
              call dist#ft#SetFileTypeShell("tcsh")
    .login    call dist#ft#CSH()
    .cshrc    call dist#ft#CSH()
    csh.cshrc call dist#ft#CSH()
    csh.login call dist#ft#CSH()
    csh.logout
              call dist#ft#CSH()
    *.csh     call dist#ft#CSH()
    .alias    call dist#ft#CSH()
    .zprofile setf zsh
    */etc/zprofile
              setf zsh
    .zfbfmarks
              setf zsh
    .zshrc    setf zsh
    .zshenv   setf zsh
    .zlogin   setf zsh
    .zlogout  setf zsh
    .zcompdump
              setf zsh
    *.zsh     setf zsh
    *.scm     setf scheme
    *.ss      setf scheme
    *.rkt     setf scheme
    .screenrc setf screen
    screenrc  setf screen
    *.sim     setf simula
    *.sin     setf sinda
    *.s85     setf sinda
    *.sst     setf sisu
    *.ssm     setf sisu
    *.ssi     setf sisu
    *.-sst    setf sisu
    *._sst    setf sisu
    *.sst.meta
              setf sisu
    *.-sst.meta
              setf sisu
    *._sst.meta
              setf sisu
    *.il      setf skill
    *.ils     setf skill
    *.cdf     setf skill
    .slrnrc   setf slrnrc
    *.score   setf slrnsc
    *.st      setf st
    *.cls     if getline(1) =~ '^%' |  setf tex | elseif getline(1)[0] == '#' && getline(1) =~ 'rexx' |  setf rexx | else |  setf st | endif
    *.tpl     setf smarty
    *.smil    if getline(1) =~ '<?\s*xml.*?>' |   setf xml | else |   setf smil | endif
    *.smi     if getline(1) =~ '\<smil\>' |   setf smil | else |   setf mib | endif
    *.smt     setf smith
    *.smith   setf smith
    *.sno     setf snobol4
    *.spt     setf snobol4
    *.mib     setf mib
    *.my      setf mib
    *.hog     setf hog
    snort.conf
              setf hog
    vision.conf
              setf hog
    *.rules   call dist#ft#FTRules()
    *.spec    setf spec
    *.speedup setf spup
    *.spdata  setf spup
    *.spd     setf spup
    *.ice     setf slice
    *.sp      setf spice
    *.spice   setf spice
    *.spy     setf spyce
    *.spi     setf spyce
    squid.conf
              setf squid
    *.tyb     setf sql
    *.typ     setf sql
    *.tyc     setf sql
    *.pkb     setf sql
    *.pks     setf sql
    *.sql     call dist#ft#SQL()
    *.sqlj    setf sqlj
    *.sqr     setf sqr
    *.sqi     setf sqr
    ssh_config
              setf sshconfig
    */.ssh/config
              setf sshconfig
    sshd_config
              setf sshdconfig
    *.ado     setf stata
    *.do      setf stata
    *.imata   setf stata
    *.mata    setf stata
    *.class   if getline(1) !~ "^\xca\xfe\xba\xbe" | setf stata | endif
    *.hlp     setf smcl
    *.ihlp    setf smcl
    *.smcl    setf smcl
    *.stp     setf stp
    *.sml     setf sml
    *.cm      setf voscm
    */etc/sysctl.conf
              setf sysctl
    */etc/sysctl.d/*.conf
              setf sysctl
    */systemd/*.{automount,mount,path,service,socket,swap,target,timer}
              setf systemd
    /etc/systemd/system/*.d/*.conf
              setf systemd
    /etc/systemd/system/*.d/.#*
              setf systemd
    *.sdc     setf sdc
    */etc/sudoers
              setf sudoers
    sudoers.tmp
              setf sudoers
    *.svg     setf svg
    *.t       if !dist#ft#FTnroff() && !dist#ft#FTperl() | setf tads | endif
    tags      setf tags
    *.tak     setf tak
    {pending,completed,undo}.data
              setf taskdata
    *.task    setf taskedit
    *.tcl     setf tcl
    *.tk      setf tcl
    *.itcl    setf tcl
    *.itk     setf tcl
    *.jacl    setf tcl
    *.tli     setf tli
    *.slt     setf tsalt
    *.ttl     setf teraterm
    *.ti      setf terminfo
    *.latex   setf tex
    *.sty     setf tex
    *.dtx     setf tex
    *.ltx     setf tex
    *.bbl     setf tex
    *.tex     call dist#ft#FTtex()
    *.mkii    setf context
    *.mkiv    setf context
    *.mkvi    setf context
    *.texinfo setf texinfo
    *.texi    setf texinfo
    *.txi     setf texinfo
    texmf.cnf setf texmf
    .tidyrc   setf tidy
    tidyrc    setf tidy
    *.tf      setf tf
    .tfrc     setf tf
    tfrc      setf tf
    {.,}tmux*.conf
              setf tmux
    *.tpp     setf tpp
    *.treetop setf treetop
    trustees.conf
              setf trustees
    *.tssgm   setf tssgm
    *.tssop   setf tssop
    *.tsscl   setf tsscl
    *.tutor   setf tutor
    *.twig    setf twig
    *.ts      setf typescript
    *.tsx     setf typescriptreact
    *.uit     setf uil
    *.uil     setf uil
    */etc/udev/udev.conf
              setf udevconf
    */etc/udev/permissions.d/*.permissions
              setf udevperm
    */etc/udev/cdsymlinks.conf
              setf sh
    *.uc      setf uc
    */etc/updatedb.conf
              setf updatedb
    */usr/share/upstart/*.conf
              setf upstart
    */usr/share/upstart/*.override
              setf upstart
    */etc/init/*.conf
              setf upstart
    */etc/init/*.override
              setf upstart
    */.init/*.conf
              setf upstart
    */.init/*.override
              setf upstart
    */.config/upstart/*.conf
              setf upstart
    */.config/upstart/*.override
              setf upstart
    *.vr      setf vera
    *.vri     setf vera
    *.vrh     setf vera
    *.v       setf verilog
    *.va      setf verilogams
    *.vams    setf verilogams
    *.sv      setf systemverilog
    *.svh     setf systemverilog
    *.hdl     setf vhdl
    *.vhd     setf vhdl
    *.vhdl    setf vhdl
    *.vbe     setf vhdl
    *.vst     setf vhdl
    *.vim     setf vim
    *.vba     setf vim
    .exrc     setf vim
    _exrc     setf vim
    .viminfo  setf viminfo
    _viminfo  setf viminfo
    *.hw      if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.module  if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.pkg     if getline(1) =~ '<?php' |   setf php | else |   setf virata | endif
    *.frm     call dist#ft#FTVB("form")
    *.sba     setf vb
    vgrindefs setf vgrindefs
    *.wrl     setf vrml
    *.vroom   setf vroom
    *.vue     setf vue
    *.wast    setf wast
    *.wat     setf wast
    *.wm      setf webmacro
    .wgetrc   setf wget
    wgetrc    setf wget
    *.wml     setf wml
    *.wbt     setf winbatch
    *.wsml    setf wsml
    *.wpl     setf xml
    wvdial.conf
              setf wvdial
    .wvdialrc setf wvdial
    .cvsrc    setf cvsrc
    cvs\d\+   setf cvs
    *.web     if getline(1)[0].getline(2)[0].getline(3)[0].getline(4)[0].getline(5)[0] =~ "%" |   setf web | else |   setf winbatch | endif
    *.ws[fc]  setf wsh
    *.xhtml   setf xhtml
    *.xht     setf xhtml
    XF86Config
              if getline(1) =~ '\<XConfigurator\>' |   let b:xf86conf_xfree86_version = 3 | endif | setf xf86conf
    */xorg.conf.d/*.conf
              let b:xf86conf_xfree86_version = 4 | setf xf86conf
    xorg.conf let b:xf86conf_xfree86_version = 4 | setf xf86conf
    xorg.conf-4
              let b:xf86conf_xfree86_version = 4 | setf xf86conf
    */etc/xinetd.conf
              setf xinetd
    *.xs      setf xs
    .Xdefaults
              setf xdefaults
    .Xpdefaults
              setf xdefaults
    .Xresources
              setf xdefaults
    xdm-config
              setf xdefaults
    *.ad      setf xdefaults
    *.msc     setf xmath
    *.msf     setf xmath
    *.ms      if !dist#ft#FTnroff() | setf xmath | endif
    *.xml     call dist#ft#FTxml()
    *.xmi     setf xml
    *.csproj  setf xml
    *.csproj.user
              setf xml
    *.ui      setf xml
    *.tpm     setf xml
    */etc/xdg/menus/*.menu
              setf xml
    fglrxrc   setf xml
    *.wsdl    setf xml
    *.xlf     setf xml
    *.xliff   setf xml
    *.xul     setf xml
    *Xmodmap  setf xmodmap
    *.xq      setf xquery
    *.xql     setf xquery
    *.xqm     setf xquery
    *.xquery  setf xquery
    *.xqy     setf xquery
    *.xsd     setf xsd
    *.xsl     setf xslt
    *.xslt    setf xslt
    *.yy      setf yacc
    *.yxx     setf yacc
    *.y++     setf yacc
    *.y       call dist#ft#FTy()
    *.yaml    setf yaml
    *.yml     setf yaml
    *.raml    setf raml
    */etc/yum.conf
              setf dosini
    *.zu      setf zimbu
    *.zut     setf zimbutempl
    *.dtml    call dist#ft#FThtml()
    *.pt      call dist#ft#FThtml()
    *.cpt     call dist#ft#FThtml()
    *.zsql    call dist#ft#SQL()
    *.z8a     setf z8a
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif
    */etc/proftpd/*.conf*
              call s:StarSetf('apachestyle')
    */etc/proftpd/conf.*/*
              call s:StarSetf('apachestyle')
    proftpd.conf*
              call s:StarSetf('apachestyle')
    access.conf*
              call s:StarSetf('apache')
    apache.conf*
              call s:StarSetf('apache')
    apache2.conf*
              call s:StarSetf('apache')
    httpd.conf*
              call s:StarSetf('apache')
    srm.conf* call s:StarSetf('apache')
    */etc/apache2/*.conf*
              call s:StarSetf('apache')
    */etc/apache2/conf.*/*
              call s:StarSetf('apache')
    */etc/apache2/mods-*/*
              call s:StarSetf('apache')
    */etc/apache2/sites-*/*
              call s:StarSetf('apache')
    */etc/httpd/conf.d/*.conf*
              call s:StarSetf('apache')
    *asterisk/*.conf*
              call s:StarSetf('asterisk')
    *asterisk*/*voicemail.conf*
              call s:StarSetf('asteriskvm')
    bzr_log.* setf bzr
    */named/db.*
              call s:StarSetf('bindzone')
    */bind/db.*
              call s:StarSetf('bindzone')
    */.calendar/*
              call s:StarSetf('calendar')
    */share/calendar/*/calendar.*
              call s:StarSetf('calendar')
    */share/calendar/calendar.*
              call s:StarSetf('calendar')
    [cC]hange[lL]og*
              if getline(1) =~ '; urgency='|  call s:StarSetf('debchangelog')|else|  call s:StarSetf('changelog')|endif
    crontab   call s:StarSetf('crontab')
    crontab.* call s:StarSetf('crontab')
    */etc/cron.d/*
              call s:StarSetf('crontab')
    */etc/dnsmasq.d/*
              call s:StarSetf('dnsmasq')
    drac.*    call s:StarSetf('dracula')
    */.fvwm/* call s:StarSetf('fvwm')
    *fvwmrc*  let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm95*.hook
              let b:fvwm_version = 1 | call s:StarSetf('fvwm')
    *fvwm2rc* if expand("<afile>:e") == "m4"|  call s:StarSetf('fvwm2m4')|else|  let b:fvwm_version = 2 | call s:StarSetf('fvwm')|endif
    */tmp/lltmp*
              call s:StarSetf('gedcom')
    */.gitconfig.d/*
              call s:StarSetf('gitconfig')
    /etc/gitconfig.d/*
              call s:StarSetf('gitconfig')
    */gitolite-admin/conf/*
              call s:StarSetf('gitolite')
    .gtkrc*   call s:StarSetf('gtkrc')
    gtkrc*    call s:StarSetf('gtkrc')
    Prl*.*    call s:StarSetf('jam')
    JAM*.*    call s:StarSetf('jam')
    *jarg*    if getline(1).getline(2).getline(3).getline(4).getline(5) =~? 'THIS IS THE JARGON FILE'|  call s:StarSetf('jargon')|endif
    *.properties_??_??_*
              call s:StarSetf('jproperties')
    Kconfig.* call s:StarSetf('kconfig')
    lilo.conf*
              call s:StarSetf('lilo')
    */etc/logcheck/*.d*/*
              call s:StarSetf('logcheck')
    [mM]akefile*
              call s:StarSetf('make')
    [rR]akefile*
              call s:StarSetf('ruby')
    {neo,}mutt[[:alnum:]._-]\\\{6\}
              setf mail
    reportbug-*
              call s:StarSetf('mail')
    */etc/modutils/*
              if executable(expand("<afile>")) != 1|  call s:StarSetf('modconf')|endif
    */etc/modprobe.*
              call s:StarSetf('modconf')
    .mutt{ng,}rc*
              call s:StarSetf('muttrc')
    */.mutt{ng,}/mutt{ng,}rc*
              call s:StarSetf('muttrc')
    mutt{ng,}rc*
              call s:StarSetf('muttrc')
    Mutt{ng,}rc*
              call s:StarSetf('muttrc')
    .neomuttrc*
              call s:StarSetf('neomuttrc')
    */.neomutt/neomuttrc*
              call s:StarSetf('neomuttrc')
    neomuttrc*
              call s:StarSetf('neomuttrc')
    Neomuttrc*
              call s:StarSetf('neomuttrc')
    tmac.*    call s:StarSetf('nroff')
    /etc/hostname.*
              call s:StarSetf('config')
    */etc/pam.d/*
              call s:StarSetf('pamconf')
    *printcap*
              if !did_filetype()|  let b:ptcap_type = "print" | call s:StarSetf('ptcap')|endif
    *termcap* if !did_filetype()|  let b:ptcap_type = "term" | call s:StarSetf('ptcap')|endif
    *.rdf     call dist#ft#Redif()
    .reminders*
              call s:StarSetf('remind')
    sgml.catalog*
              call s:StarSetf('catalog')
    .bashrc*  call dist#ft#SetFileTypeSH("bash")
    .bash[_-]profile*
              call dist#ft#SetFileTypeSH("bash")
    .bash[_-]logout*
              call dist#ft#SetFileTypeSH("bash")
    .bash[_-]aliases*
              call dist#ft#SetFileTypeSH("bash")
    bash-fc[-.]*
              call dist#ft#SetFileTypeSH("bash")
    PKGBUILD* call dist#ft#SetFileTypeSH("bash")
    .kshrc*   call dist#ft#SetFileTypeSH("ksh")
    .profile* call dist#ft#SetFileTypeSH(getline(1))
    .tcshrc*  call dist#ft#SetFileTypeShell("tcsh")
    .login*   call dist#ft#CSH()
    .cshrc*   call dist#ft#CSH()
    *.vhdl_[0-9]*
              call s:StarSetf('vhdl')
    *vimrc*   call s:StarSetf('vim')
    svn-commit*.tmp
              setf svn
    Xresources*
              call s:StarSetf('xdefaults')
    */app-defaults/*
              call s:StarSetf('xdefaults')
    */Xresources/*
              call s:StarSetf('xdefaults')
    XF86Config-4*
              let b:xf86conf_xfree86_version = 4 | call s:StarSetf('xf86conf')
    XF86Config*
              if getline(1) =~ '\<XConfigurator\>'|  let b:xf86conf_xfree86_version = 3|endif|call s:StarSetf('xf86conf')
    *xmodmap* call s:StarSetf('xmodmap')
    */etc/xinetd.d/*
              call s:StarSetf('xinetd')
    */etc/yum.repos.d/*
              call s:StarSetf('dosini')
    .zsh*     call s:StarSetf('zsh')
    .zlog*    call s:StarSetf('zsh')
    .zcompdump*
              call s:StarSetf('zsh')
    zsh*      call s:StarSetf('zsh')
    zlog*     call s:StarSetf('zsh')
    *.text    setf text
    README    setf text
    *.txt     if getline('$') !~ 'vim:.*ft=help'|   setf text| endif       
    *         if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf FALLBACK conf | endif
filetypeplugin  FileType
    *         call s:LoadFTPlugin()
filetypeindent  FileType
    *         call s:LoadIndent()
syntaxset  FileType
    *         exe "set syntax=" . expand("<amatch>")
filetypedetect  StdinReadPost
    *         if !did_filetype() | runtime! scripts.vim | endif
              if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf FALLBACK conf | endif
Syntax
    *         call s:SynSet()
    c         if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    cpp       if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    cs        if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    idl       if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    java      if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    php       if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
    datascript
              if (exists('b:load_doxygen_syntax') && b:load_doxygen_syntax)^I|| (exists('g:load_doxygen_syntax') && g:load_doxygen_syntax)   | runtime! syntax/doxygen.vim | endif
--- Normal/Visual mode mappings ---

No mapping found
--- Insert/Command-line mode mappings ---

No mapping found
--- Abbreviations ---

No abbreviation found
--- Highlighting ---
SpecialKey     xxx ctermfg=81 guifg=Cyan
EndOfBuffer    xxx links to NonText
TermCursor     xxx cterm=reverse gui=reverse
TermCursorNC   xxx cleared
NonText        xxx ctermfg=12 gui=bold guifg=Blue
Directory      xxx ctermfg=159 guifg=Cyan
ErrorMsg       xxx ctermfg=15 ctermbg=1 guifg=White guibg=Red
IncSearch      xxx cterm=reverse gui=reverse
Search         xxx ctermfg=0 ctermbg=11 guifg=Black guibg=Yellow
MoreMsg        xxx ctermfg=121 gui=bold guifg=SeaGreen
ModeMsg        xxx cterm=bold gui=bold
LineNr         xxx ctermfg=11 guifg=Yellow
CursorLineNr   xxx ctermfg=11 gui=bold guifg=Yellow
Question       xxx ctermfg=121 gui=bold guifg=Green
StatusLine     xxx cterm=bold,reverse gui=bold,reverse
StatusLineNC   xxx cterm=reverse gui=reverse
VertSplit      xxx cterm=reverse gui=reverse
Title          xxx ctermfg=225 gui=bold guifg=Magenta
Visual         xxx ctermbg=242 guibg=DarkGrey
VisualNC       xxx cleared
WarningMsg     xxx ctermfg=224 guifg=Red
WildMenu       xxx ctermfg=0 ctermbg=11 guifg=Black guibg=Yellow
Folded         xxx ctermfg=14 ctermbg=242 guifg=Cyan guibg=DarkGrey
FoldColumn     xxx ctermfg=14 ctermbg=242 guifg=Cyan guibg=Grey
DiffAdd        xxx ctermbg=4 guibg=DarkBlue
DiffChange     xxx ctermbg=5 guibg=DarkMagenta
DiffDelete     xxx ctermfg=12 ctermbg=6 gui=bold guifg=Blue guibg=DarkCyan
DiffText       xxx cterm=bold ctermbg=9 gui=bold guibg=Red
SignColumn     xxx ctermfg=14 ctermbg=242 guifg=Cyan guibg=Grey
Conceal        xxx ctermfg=7 ctermbg=242 guifg=LightGrey guibg=DarkGrey
SpellBad       xxx ctermbg=9 gui=undercurl guisp=Red
SpellCap       xxx ctermbg=12 gui=undercurl guisp=Blue
SpellRare      xxx ctermbg=13 gui=undercurl guisp=Magenta
SpellLocal     xxx ctermbg=14 gui=undercurl guisp=Cyan
Pmenu          xxx ctermfg=0 ctermbg=13 guibg=Magenta
PmenuSel       xxx ctermfg=242 ctermbg=0 guibg=DarkGrey
PmenuSbar      xxx ctermbg=248 guibg=Grey
PmenuThumb     xxx ctermbg=15 guibg=White
TabLine        xxx cterm=underline ctermfg=15 ctermbg=242 gui=underline guibg=DarkGrey
TabLineSel     xxx cterm=bold gui=bold
TabLineFill    xxx cterm=reverse gui=reverse
CursorColumn   xxx ctermbg=242 guibg=Grey40
CursorLine     xxx cterm=underline guibg=Grey40
ColorColumn    xxx ctermbg=1 guibg=DarkRed
QuickFixLine   xxx links to Search
Whitespace     xxx links to NonText
NormalNC       xxx cleared
MsgSeparator   xxx links to StatusLine
NormalFloat    xxx links to Pmenu
MsgArea        xxx cleared
RedrawDebugNormal xxx cterm=reverse gui=reverse
RedrawDebugClear xxx ctermbg=11 guibg=Yellow
RedrawDebugComposed xxx ctermbg=10 guibg=Green
RedrawDebugRecompose xxx ctermbg=9 guibg=Red
Cursor         xxx guifg=bg guibg=fg
lCursor        xxx guifg=bg guibg=fg
Substitute     xxx links to Search
MatchParen     xxx ctermbg=6 guibg=DarkCyan
Normal         xxx cleared
NvimInternalError xxx ctermfg=9 ctermbg=9 guifg=Red guibg=Red
NvimAssignment xxx links to Operator
Operator       xxx links to Statement
NvimPlainAssignment xxx links to NvimAssignment
NvimAugmentedAssignment xxx links to NvimAssignment
NvimAssignmentWithAddition xxx links to NvimAugmentedAssignment
NvimAssignmentWithSubtraction xxx links to NvimAugmentedAssignment
NvimAssignmentWithConcatenation xxx links to NvimAugmentedAssignment
NvimOperator   xxx links to Operator
NvimUnaryOperator xxx links to NvimOperator
NvimUnaryPlus  xxx links to NvimUnaryOperator
NvimUnaryMinus xxx links to NvimUnaryOperator
NvimNot        xxx links to NvimUnaryOperator
NvimBinaryOperator xxx links to NvimOperator
NvimComparison xxx links to NvimBinaryOperator
NvimComparisonModifier xxx links to NvimComparison
NvimBinaryPlus xxx links to NvimBinaryOperator
NvimBinaryMinus xxx links to NvimBinaryOperator
NvimConcat     xxx links to NvimBinaryOperator
NvimConcatOrSubscript xxx links to NvimConcat
NvimOr         xxx links to NvimBinaryOperator
NvimAnd        xxx links to NvimBinaryOperator
NvimMultiplication xxx links to NvimBinaryOperator
NvimDivision   xxx links to NvimBinaryOperator
NvimMod        xxx links to NvimBinaryOperator
NvimTernary    xxx links to NvimOperator
NvimTernaryColon xxx links to NvimTernary
NvimParenthesis xxx links to Delimiter
Delimiter      xxx links to Special
NvimLambda     xxx links to NvimParenthesis
NvimNestingParenthesis xxx links to NvimParenthesis
NvimCallingParenthesis xxx links to NvimParenthesis
NvimSubscript  xxx links to NvimParenthesis
NvimSubscriptBracket xxx links to NvimSubscript
NvimSubscriptColon xxx links to NvimSubscript
NvimCurly      xxx links to NvimSubscript
NvimContainer  xxx links to NvimParenthesis
NvimDict       xxx links to NvimContainer
NvimList       xxx links to NvimContainer
NvimIdentifier xxx links to Identifier
Identifier     xxx cterm=bold ctermfg=14 guifg=#40ffff
NvimIdentifierScope xxx links to NvimIdentifier
NvimIdentifierScopeDelimiter xxx links to NvimIdentifier
NvimIdentifierName xxx links to NvimIdentifier
NvimIdentifierKey xxx links to NvimIdentifier
NvimColon      xxx links to Delimiter
NvimComma      xxx links to Delimiter
NvimArrow      xxx links to Delimiter
NvimRegister   xxx links to SpecialChar
SpecialChar    xxx links to Special
NvimNumber     xxx links to Number
Number         xxx links to Constant
NvimFloat      xxx links to NvimNumber
NvimNumberPrefix xxx links to Type
Type           xxx ctermfg=121 gui=bold guifg=#60ff60
NvimOptionSigil xxx links to Type
NvimOptionName xxx links to NvimIdentifier
NvimOptionScope xxx links to NvimIdentifierScope
NvimOptionScopeDelimiter xxx links to NvimIdentifierScopeDelimiter
NvimEnvironmentSigil xxx links to NvimOptionSigil
NvimEnvironmentName xxx links to NvimIdentifier
NvimString     xxx links to String
String         xxx links to Constant
NvimStringBody xxx links to NvimString
NvimStringQuote xxx links to NvimString
NvimStringSpecial xxx links to SpecialChar
NvimSingleQuote xxx links to NvimStringQuote
NvimSingleQuotedBody xxx links to NvimStringBody
NvimSingleQuotedQuote xxx links to NvimStringSpecial
NvimDoubleQuote xxx links to NvimStringQuote
NvimDoubleQuotedBody xxx links to NvimStringBody
NvimDoubleQuotedEscape xxx links to NvimStringSpecial
NvimFigureBrace xxx links to NvimInternalError
NvimSingleQuotedUnknownEscape xxx links to NvimInternalError
NvimSpacing    xxx links to Normal
NvimInvalidSingleQuotedUnknownEscape xxx links to NvimInternalError
NvimInvalid    xxx links to Error
Error          xxx ctermfg=15 ctermbg=9 guifg=White guibg=Red
NvimInvalidAssignment xxx links to NvimInvalid
NvimInvalidPlainAssignment xxx links to NvimInvalidAssignment
NvimInvalidAugmentedAssignment xxx links to NvimInvalidAssignment
NvimInvalidAssignmentWithAddition xxx links to NvimInvalidAugmentedAssignment
NvimInvalidAssignmentWithSubtraction xxx links to NvimInvalidAugmentedAssignment
NvimInvalidAssignmentWithConcatenation xxx links to NvimInvalidAugmentedAssignment
NvimInvalidOperator xxx links to NvimInvalid
NvimInvalidUnaryOperator xxx links to NvimInvalidOperator
NvimInvalidUnaryPlus xxx links to NvimInvalidUnaryOperator
NvimInvalidUnaryMinus xxx links to NvimInvalidUnaryOperator
NvimInvalidNot xxx links to NvimInvalidUnaryOperator
NvimInvalidBinaryOperator xxx links to NvimInvalidOperator
NvimInvalidComparison xxx links to NvimInvalidBinaryOperator
NvimInvalidComparisonModifier xxx links to NvimInvalidComparison
NvimInvalidBinaryPlus xxx links to NvimInvalidBinaryOperator
NvimInvalidBinaryMinus xxx links to NvimInvalidBinaryOperator
NvimInvalidConcat xxx links to NvimInvalidBinaryOperator
NvimInvalidConcatOrSubscript xxx links to NvimInvalidConcat
NvimInvalidOr  xxx links to NvimInvalidBinaryOperator
NvimInvalidAnd xxx links to NvimInvalidBinaryOperator
NvimInvalidMultiplication xxx links to NvimInvalidBinaryOperator
NvimInvalidDivision xxx links to NvimInvalidBinaryOperator
NvimInvalidMod xxx links to NvimInvalidBinaryOperator
NvimInvalidTernary xxx links to NvimInvalidOperator
NvimInvalidTernaryColon xxx links to NvimInvalidTernary
NvimInvalidDelimiter xxx links to NvimInvalid
NvimInvalidParenthesis xxx links to NvimInvalidDelimiter
NvimInvalidLambda xxx links to NvimInvalidParenthesis
NvimInvalidNestingParenthesis xxx links to NvimInvalidParenthesis
NvimInvalidCallingParenthesis xxx links to NvimInvalidParenthesis
NvimInvalidSubscript xxx links to NvimInvalidParenthesis
NvimInvalidSubscriptBracket xxx links to NvimInvalidSubscript
NvimInvalidSubscriptColon xxx links to NvimInvalidSubscript
NvimInvalidCurly xxx links to NvimInvalidSubscript
NvimInvalidContainer xxx links to NvimInvalidParenthesis
NvimInvalidDict xxx links to NvimInvalidContainer
NvimInvalidList xxx links to NvimInvalidContainer
NvimInvalidValue xxx links to NvimInvalid
NvimInvalidIdentifier xxx links to NvimInvalidValue
NvimInvalidIdentifierScope xxx links to NvimInvalidIdentifier
NvimInvalidIdentifierScopeDelimiter xxx links to NvimInvalidIdentifier
NvimInvalidIdentifierName xxx links to NvimInvalidIdentifier
NvimInvalidIdentifierKey xxx links to NvimInvalidIdentifier
NvimInvalidColon xxx links to NvimInvalidDelimiter
NvimInvalidComma xxx links to NvimInvalidDelimiter
NvimInvalidArrow xxx links to NvimInvalidDelimiter
NvimInvalidRegister xxx links to NvimInvalidValue
NvimInvalidNumber xxx links to NvimInvalidValue
NvimInvalidFloat xxx links to NvimInvalidNumber
NvimInvalidNumberPrefix xxx links to NvimInvalidNumber
NvimInvalidOptionSigil xxx links to NvimInvalidIdentifier
NvimInvalidOptionName xxx links to NvimInvalidIdentifier
NvimInvalidOptionScope xxx links to NvimInvalidIdentifierScope
NvimInvalidOptionScopeDelimiter xxx links to NvimInvalidIdentifierScopeDelimiter
NvimInvalidEnvironmentSigil xxx links to NvimInvalidOptionSigil
NvimInvalidEnvironmentName xxx links to NvimInvalidIdentifier
NvimInvalidString xxx links to NvimInvalidValue
NvimInvalidStringBody xxx links to NvimStringBody
NvimInvalidStringQuote xxx links to NvimInvalidString
NvimInvalidStringSpecial xxx links to NvimStringSpecial
NvimInvalidSingleQuote xxx links to NvimInvalidStringQuote
NvimInvalidSingleQuotedBody xxx links to NvimInvalidStringBody
NvimInvalidSingleQuotedQuote xxx links to NvimInvalidStringSpecial
NvimInvalidDoubleQuote xxx links to NvimInvalidStringQuote
NvimInvalidDoubleQuotedBody xxx links to NvimInvalidStringBody
NvimInvalidDoubleQuotedEscape xxx links to NvimInvalidStringSpecial
NvimInvalidDoubleQuotedUnknownEscape xxx links to NvimInvalidValue
NvimInvalidFigureBrace xxx links to NvimInvalidDelimiter
NvimInvalidSpacing xxx links to ErrorMsg
NvimDoubleQuotedUnknownEscape xxx links to NvimInvalidValue
Comment        xxx ctermfg=14 guifg=#80a0ff
Constant       xxx ctermfg=13 guifg=#ffa0a0
Special        xxx ctermfg=224 guifg=Orange
Statement      xxx ctermfg=11 gui=bold guifg=#ffff60
PreProc        xxx ctermfg=81 guifg=#ff80ff
Underlined     xxx cterm=underline ctermfg=81 gui=underline guifg=#80a0ff
Ignore         xxx ctermfg=0 guifg=bg
Todo           xxx ctermfg=0 ctermbg=11 guifg=Blue guibg=Yellow
Character      xxx links to Constant
Boolean        xxx links to Constant
Float          xxx links to Number
Function       xxx links to Identifier
Conditional    xxx links to Statement
Repeat         xxx links to Statement
Label          xxx links to Statement
Keyword        xxx links to Statement
Exception      xxx links to Statement
Include        xxx links to PreProc
Define         xxx links to PreProc
Macro          xxx links to PreProc
PreCondit      xxx links to PreProc
StorageClass   xxx links to Type
Structure      xxx links to Type
Typedef        xxx links to Type
Tag            xxx links to Special
SpecialComment xxx links to Special
Debug          xxx links to Special
--- Variables ---
plug_home              /home/violeine/.vim/plugged
syntax_on             #1
did_load_filetypes    #1
did_indent_on         #1
loaded_plug           #1
plugs_order           ['nord-vim', 'gruvbox', 'lightline.vim', 'vim-colors-solarized', 'vim-devicons', 'vim-tmux-navigator', 'vim-fugitive', 'matchit.zip', 'vim-surround', 'auto-pairs']
did_load_ftplugin     #1
ft_ignore_pat          \.\(Z\|gz\|bz2\|zip\|tgz\)$
more_save             #1
plugs                 {'vim-surround': {'uri': 'https://git::@github.com/tpope/vim-surround.git', 'dir': '/home/violeine/.vim/plugged/vim-surround/', 'frozen': 0, 'branch': 'master'}, 'gruvbox': {'uri': 'https://git::@github.com/morhetz/gruvbox.git', 'dir': '/home/violeine/.vim/plugged/gruvbox/', 'frozen': 0, 'branch': 'master'}, 'vim-tmux-navigator': {'uri': 'https://git::@github.com/christoomey/vim-tmux-navigator.git', 'dir': '/home/violeine/.vim/plugged/vim-tmux-navigator/', 'frozen': 0, 'branch': 'master'}, 'nord-vim': {'uri': 'https://git::@github.com/arcticicestudio/nord-vim.git', 'dir': '/home/violeine/.vim/plugged/nord-vim/', 'frozen': 0, 'branch': 'master'}, 'vim-colors-solarized': {'uri': 'https://git::@github.com/altercation/vim-colors-solarized.git', 'dir': '/home/violeine/.vim/plugged/vim-colors-solarized/', 'frozen': 0, 'branch': 'master'}, 'vim-fugitive': {'uri': 'https://git::@github.com/tpope/vim-fugitive.git', 'dir': '/home/violeine/.vim/plugged/vim-fugitive/', 'frozen': 0, 'branch': 'master'}, 'lightline.vim': {'uri': 'https://git::@github.com/itchyny/lightline.vim.git', 'dir': '/home/violeine/.vim/plugged/lightline.vim/', 'frozen': 0, 'branch': 'master'}, 'matchit.zip': {'uri': 'https://git::@github.com/vim-scripts/matchit.zip.git', 'dir': '/home/violeine/.vim/plugged/matchit.zip/', 'frozen': 0, 'branch': 'master'}, 'vim-devicons': {'uri': 'https://git::@github.com/ryanoasis/vim-devicons.git', 'dir': '/home/violeine/.vim/plugged/vim-devicons/', 'frozen': 0, 'branch': 'master'}, 'auto-pairs': {'uri': 'https://git::@github.com/jiangmiao/auto-pairs.git', 'dir': '/home/violeine/.vim/plugged/auto-pairs/', 'frozen': 0, 'branch': 'master'}}
b:changedtick         #2
v:stderr              #2
v:beval_winid         #0
v:version             #800
v:t_list              #3
v:beval_winnr         #0
v:errors              []
v:lnum                #0
v:hlsearch            #1
v:scrollstart          function plug#end[82]..<SNR>5_reorg_rtp[13]..<SNR>5_rtp[1]..<SNR>5_path[1]..<SNR>5_trim line 1
v:oldfiles            []
v:dying               #0
v:windowid            #0
v:mouse_winid         #0
v:exiting              v:null
v:lang                 en_US.UTF-8
v:count               #0
v:progpath             /usr/bin/nvim
v:true                 v:true
v:t_string            #1
v:progname             nvim
v:t_bool              #6
v:t_number            #0
v:_null_dict          {}
v:vim_did_enter       #0
v:echospace           #224
v:cmdbang             #0
v:foldlevel           #0
v:msgpack_types       {'float': [], 'array': [], 'binary': [], 'integer': [], 'nil': [], 'boolean': [], 'ext': [], 'map': [], 'string': []}
v:t_func              #2
v:ctype                en_US.UTF-8
v:prevcount           #0
v:register             "
v:mouse_win           #0
v:count1              #1
v:foldstart           #0
v:foldend             #0
v:_null_list          []
v:profiling           #0
v:t_float             #5
v:null                 v:null
v:beval_col           #0
v:errmsg               E169: Command too recursive
v:beval_lnum          #0
v:mouse_lnum          #0
v:completed_item      {}
v:t_dict              #4
v:false                v:false
v:beval_bufnr         #0
v:shell_error         #0
v:testing             #0
v:servername           /tmp/nvim8kHBxB/0
v:lc_time              en_US.UTF-8
v:searchforward       #1
v:event               {}
v:mouse_col           #0
v:statusmsg            No abbreviation found